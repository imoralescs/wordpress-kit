{"version":3,"file":"main.css","sources":["main.scss","bourbon/_bourbon.scss","bourbon/settings/_prefixer.scss","bourbon/settings/_px-to-em.scss","bourbon/settings/_asset-pipeline.scss","bourbon/functions/_assign-inputs.scss","bourbon/functions/_contains.scss","bourbon/functions/_contains-falsy.scss","bourbon/functions/_is-length.scss","bourbon/functions/_is-light.scss","bourbon/functions/_is-number.scss","bourbon/functions/_is-size.scss","bourbon/functions/_px-to-em.scss","bourbon/functions/_px-to-rem.scss","bourbon/functions/_shade.scss","bourbon/functions/_strip-units.scss","bourbon/functions/_tint.scss","bourbon/functions/_transition-property-name.scss","bourbon/functions/_unpack.scss","bourbon/functions/_modular-scale.scss","bourbon/helpers/_convert-units.scss","bourbon/helpers/_directional-values.scss","bourbon/helpers/_font-source-declaration.scss","bourbon/helpers/_gradient-positions-parser.scss","bourbon/helpers/_linear-angle-parser.scss","bourbon/helpers/_linear-gradient-parser.scss","bourbon/helpers/_linear-positions-parser.scss","bourbon/helpers/_linear-side-corner-parser.scss","bourbon/helpers/_radial-arg-parser.scss","bourbon/helpers/_radial-positions-parser.scss","bourbon/helpers/_radial-gradient-parser.scss","bourbon/helpers/_render-gradients.scss","bourbon/helpers/_shape-size-stripper.scss","bourbon/helpers/_str-to-num.scss","bourbon/css3/_animation.scss","bourbon/css3/_appearance.scss","bourbon/css3/_backface-visibility.scss","bourbon/css3/_background.scss","bourbon/css3/_background-image.scss","bourbon/css3/_border-image.scss","bourbon/css3/_calc.scss","bourbon/css3/_columns.scss","bourbon/css3/_filter.scss","bourbon/css3/_flex-box.scss","bourbon/css3/_font-face.scss","bourbon/css3/_font-feature-settings.scss","bourbon/css3/_hidpi-media-query.scss","bourbon/css3/_hyphens.scss","bourbon/css3/_image-rendering.scss","bourbon/css3/_keyframes.scss","bourbon/css3/_linear-gradient.scss","bourbon/css3/_perspective.scss","bourbon/css3/_placeholder.scss","bourbon/css3/_radial-gradient.scss","bourbon/css3/_selection.scss","bourbon/css3/_text-decoration.scss","bourbon/css3/_transform.scss","bourbon/css3/_transition.scss","bourbon/css3/_user-select.scss","bourbon/addons/_border-color.scss","bourbon/addons/_border-radius.scss","bourbon/addons/_border-style.scss","bourbon/addons/_border-width.scss","bourbon/addons/_buttons.scss","bourbon/addons/_clearfix.scss","bourbon/addons/_ellipsis.scss","bourbon/addons/_font-stacks.scss","bourbon/addons/_hide-text.scss","bourbon/addons/_margin.scss","bourbon/addons/_padding.scss","bourbon/addons/_position.scss","bourbon/addons/_prefixer.scss","bourbon/addons/_retina-image.scss","bourbon/addons/_size.scss","bourbon/addons/_text-inputs.scss","bourbon/addons/_timing-functions.scss","bourbon/addons/_triangle.scss","bourbon/addons/_word-wrap.scss","bourbon/_bourbon-deprecated-upcoming.scss","vendor/_normalize.scss","vendor/_slick.scss","base/_vars.scss","base/_fonts.scss","base/_icons.scss","base/_util.scss","base/_browser-tweaks.scss","base/_global.scss","base/_grid.scss","base/_animation.scss","base/_header.scss","base/_footer.scss","modules/_example.scss"],"sourcesContent":["$direction: left;\r\n$reverse: right;\r\n$dir: ltr;\r\n\r\n@import\r\n\"bourbon/bourbon\",\r\n\r\n// vendor\r\n\"vendor/normalize\",\r\n\"vendor/slick\",\r\n\r\n// base\r\n\"base/vars\",\r\n\"base/fonts\",\r\n\"base/icons\",\r\n\"base/util\",\r\n\"base/browser-tweaks\",\r\n\"base/global\",\r\n\"base/grid\",\r\n\"base/animation\",\r\n\"base/header\",\r\n\"base/footer\",\r\n\r\n// modules\r\n\"modules/example\";\r\n","// Bourbon 4.2.5\r\n// http://bourbon.io\r\n// Copyright 2011-2015 thoughtbot, inc.\r\n// MIT License\r\n\r\n@import \"settings/prefixer\";\r\n@import \"settings/px-to-em\";\r\n@import \"settings/asset-pipeline\";\r\n\r\n@import \"functions/assign-inputs\";\r\n@import \"functions/contains\";\r\n@import \"functions/contains-falsy\";\r\n@import \"functions/is-length\";\r\n@import \"functions/is-light\";\r\n@import \"functions/is-number\";\r\n@import \"functions/is-size\";\r\n@import \"functions/px-to-em\";\r\n@import \"functions/px-to-rem\";\r\n@import \"functions/shade\";\r\n@import \"functions/strip-units\";\r\n@import \"functions/tint\";\r\n@import \"functions/transition-property-name\";\r\n@import \"functions/unpack\";\r\n@import \"functions/modular-scale\";\r\n\r\n@import \"helpers/convert-units\";\r\n@import \"helpers/directional-values\";\r\n@import \"helpers/font-source-declaration\";\r\n@import \"helpers/gradient-positions-parser\";\r\n@import \"helpers/linear-angle-parser\";\r\n@import \"helpers/linear-gradient-parser\";\r\n@import \"helpers/linear-positions-parser\";\r\n@import \"helpers/linear-side-corner-parser\";\r\n@import \"helpers/radial-arg-parser\";\r\n@import \"helpers/radial-positions-parser\";\r\n@import \"helpers/radial-gradient-parser\";\r\n@import \"helpers/render-gradients\";\r\n@import \"helpers/shape-size-stripper\";\r\n@import \"helpers/str-to-num\";\r\n\r\n@import \"css3/animation\";\r\n@import \"css3/appearance\";\r\n@import \"css3/backface-visibility\";\r\n@import \"css3/background\";\r\n@import \"css3/background-image\";\r\n@import \"css3/border-image\";\r\n@import \"css3/calc\";\r\n@import \"css3/columns\";\r\n@import \"css3/filter\";\r\n@import \"css3/flex-box\";\r\n@import \"css3/font-face\";\r\n@import \"css3/font-feature-settings\";\r\n@import \"css3/hidpi-media-query\";\r\n@import \"css3/hyphens\";\r\n@import \"css3/image-rendering\";\r\n@import \"css3/keyframes\";\r\n@import \"css3/linear-gradient\";\r\n@import \"css3/perspective\";\r\n@import \"css3/placeholder\";\r\n@import \"css3/radial-gradient\";\r\n@import \"css3/selection\";\r\n@import \"css3/text-decoration\";\r\n@import \"css3/transform\";\r\n@import \"css3/transition\";\r\n@import \"css3/user-select\";\r\n\r\n@import \"addons/border-color\";\r\n@import \"addons/border-radius\";\r\n@import \"addons/border-style\";\r\n@import \"addons/border-width\";\r\n@import \"addons/buttons\";\r\n@import \"addons/clearfix\";\r\n@import \"addons/ellipsis\";\r\n@import \"addons/font-stacks\";\r\n@import \"addons/hide-text\";\r\n@import \"addons/margin\";\r\n@import \"addons/padding\";\r\n@import \"addons/position\";\r\n@import \"addons/prefixer\";\r\n@import \"addons/retina-image\";\r\n@import \"addons/size\";\r\n@import \"addons/text-inputs\";\r\n@import \"addons/timing-functions\";\r\n@import \"addons/triangle\";\r\n@import \"addons/word-wrap\";\r\n\r\n@import \"bourbon-deprecated-upcoming\";\r\n","@charset \"UTF-8\";\r\n\r\n/// Global variables to enable or disable vendor prefixes\r\n\r\n$prefix-for-webkit:    true !default;\r\n$prefix-for-mozilla:   true !default;\r\n$prefix-for-microsoft: true !default;\r\n$prefix-for-opera:     true !default;\r\n$prefix-for-spec:      true !default;\r\n","$em-base: 16px !default;\r\n","@charset \"UTF-8\";\r\n\r\n/// A global setting to enable or disable the `$asset-pipeline` variable for all functions that accept it.\r\n///\r\n/// @type Bool\r\n\r\n$asset-pipeline: false !default;\r\n","@function assign-inputs($inputs, $pseudo: null) {\r\n  $list: ();\r\n\r\n  @each $input in $inputs {\r\n    $input: unquote($input);\r\n    $input: if($pseudo, $input + \":\" + $pseudo, $input);\r\n    $list: append($list, $input, comma);\r\n  }\r\n\r\n  @return $list;\r\n}\r\n","@charset \"UTF-8\";\r\n\r\n/// Checks if a list contains a value(s).\r\n///\r\n/// @access private\r\n///\r\n/// @param {List} $list\r\n///   The list to check against.\r\n///\r\n/// @param {List} $values\r\n///   A single value or list of values to check for.\r\n///\r\n/// @example scss - Usage\r\n///   contains($list, $value)\r\n///\r\n/// @return {Bool}\r\n\r\n@function contains($list, $values...) {\r\n  @each $value in $values {\r\n    @if type-of(index($list, $value)) != \"number\" {\r\n      @return false;\r\n    }\r\n  }\r\n\r\n  @return true;\r\n}\r\n","@charset \"UTF-8\";\r\n\r\n/// Checks if a list does not contains a value.\r\n///\r\n/// @access private\r\n///\r\n/// @param {List} $list\r\n///   The list to check against.\r\n///\r\n/// @return {Bool}\r\n\r\n@function contains-falsy($list) {\r\n  @each $item in $list {\r\n    @if not $item {\r\n      @return true;\r\n    }\r\n  }\r\n\r\n  @return false;\r\n}\r\n","@charset \"UTF-8\";\r\n\r\n/// Checks for a valid CSS length.\r\n///\r\n/// @param {String} $value\r\n\r\n@function is-length($value) {\r\n  @return type-of($value) != \"null\" and (str-slice($value + \"\", 1, 4) == \"calc\"\r\n       or index(auto inherit initial 0, $value)\r\n       or (type-of($value) == \"number\" and not(unitless($value))));\r\n}\r\n","@charset \"UTF-8\";\r\n\r\n/// Programatically determines whether a color is light or dark.\r\n///\r\n/// @link http://robots.thoughtbot.com/closer-look-color-lightness\r\n///\r\n/// @param {Color (Hex)} $color\r\n///\r\n/// @example scss - Usage\r\n///   is-light($color)\r\n///\r\n/// @return {Bool}\r\n\r\n@function is-light($hex-color) {\r\n  $-local-red: red(rgba($hex-color, 1));\r\n  $-local-green: green(rgba($hex-color, 1));\r\n  $-local-blue: blue(rgba($hex-color, 1));\r\n  $-local-lightness: ($-local-red * 0.2126 + $-local-green * 0.7152 + $-local-blue * 0.0722) / 255;\r\n\r\n  @return $-local-lightness > 0.6;\r\n}\r\n","@charset \"UTF-8\";\r\n\r\n/// Checks for a valid number.\r\n///\r\n/// @param {Number} $value\r\n///\r\n/// @require {function} contains\r\n\r\n@function is-number($value) {\r\n  @return contains(\"0\" \"1\" \"2\" \"3\" \"4\" \"5\" \"6\" \"7\" \"8\" \"9\" 0 1 2 3 4 5 6 7 8 9, $value);\r\n}\r\n","@charset \"UTF-8\";\r\n\r\n/// Checks for a valid CSS size.\r\n///\r\n/// @param {String} $value\r\n///\r\n/// @require {function} contains\r\n/// @require {function} is-length\r\n\r\n@function is-size($value) {\r\n  @return is-length($value)\r\n          or contains(\"fill\" \"fit-content\" \"min-content\" \"max-content\", $value);\r\n}\r\n","// Convert pixels to ems\r\n// eg. for a relational value of 12px write em(12) when the parent is 16px\r\n// if the parent is another value say 24px write em(12, 24)\r\n\r\n@function em($pxval, $base: $em-base) {\r\n  @if not unitless($pxval) {\r\n    $pxval: strip-units($pxval);\r\n  }\r\n  @if not unitless($base) {\r\n    $base: strip-units($base);\r\n  }\r\n  @return ($pxval / $base) * 1em;\r\n}\r\n","// Convert pixels to rems\r\n// eg. for a relational value of 12px write rem(12)\r\n// Assumes $em-base is the font-size of <html>\r\n\r\n@function rem($pxval) {\r\n  @if not unitless($pxval) {\r\n    $pxval: strip-units($pxval);\r\n  }\r\n\r\n  $base: $em-base;\r\n  @if not unitless($base) {\r\n    $base: strip-units($base);\r\n  }\r\n  @return ($pxval / $base) * 1rem;\r\n}\r\n","@charset \"UTF-8\";\r\n\r\n/// Mixes a color with black.\r\n///\r\n/// @param {Color} $color\r\n///\r\n/// @param {Number (Percentage)} $percent\r\n///   The amount of black to be mixed in.\r\n///\r\n/// @example scss - Usage\r\n///   .element {\r\n///     background-color: shade(#ffbb52, 60%);\r\n///   }\r\n///\r\n/// @example css - CSS Output\r\n///   .element {\r\n///     background-color: #664a20;\r\n///   }\r\n///\r\n/// @return {Color}\r\n\r\n@function shade($color, $percent) {\r\n  @return mix(#000, $color, $percent);\r\n}\r\n","@charset \"UTF-8\";\r\n\r\n/// Strips the unit from a number.\r\n///\r\n/// @param {Number (With Unit)} $value\r\n///\r\n/// @example scss - Usage\r\n///   $dimension: strip-units(10em);\r\n///\r\n/// @example css - CSS Output\r\n///   $dimension: 10;\r\n///\r\n/// @return {Number (Unitless)}\r\n\r\n@function strip-units($value) {\r\n  @return ($value / ($value * 0 + 1));\r\n}\r\n","@charset \"UTF-8\";\r\n\r\n/// Mixes a color with white.\r\n///\r\n/// @param {Color} $color\r\n///\r\n/// @param {Number (Percentage)} $percent\r\n///   The amount of white to be mixed in.\r\n///\r\n/// @example scss - Usage\r\n///   .element {\r\n///     background-color: tint(#6ecaa6, 40%);\r\n///   }\r\n///\r\n/// @example css - CSS Output\r\n///   .element {\r\n///     background-color: #a8dfc9;\r\n///   }\r\n///\r\n/// @return {Color}\r\n\r\n@function tint($color, $percent) {\r\n  @return mix(#fff, $color, $percent);\r\n}\r\n","// Return vendor-prefixed property names if appropriate\r\n// Example: transition-property-names((transform, color, background), moz) -> -moz-transform, color, background\r\n//************************************************************************//\r\n@function transition-property-names($props, $vendor: false) {\r\n  $new-props: ();\r\n\r\n  @each $prop in $props {\r\n    $new-props: append($new-props, transition-property-name($prop, $vendor), comma);\r\n  }\r\n\r\n  @return $new-props;\r\n}\r\n\r\n@function transition-property-name($prop, $vendor: false) {\r\n  // put other properties that need to be prefixed here aswell\r\n  @if $vendor and $prop == transform {\r\n    @return unquote('-'+$vendor+'-'+$prop);\r\n  }\r\n  @else {\r\n    @return $prop;\r\n  }\r\n}\r\n","@charset \"UTF-8\";\r\n\r\n/// Converts shorthand to the 4-value syntax.\r\n///\r\n/// @param {List} $shorthand\r\n///\r\n/// @example scss - Usage\r\n///   .element {\r\n///     margin: unpack(1em 2em);\r\n///   }\r\n///\r\n/// @example css - CSS Output\r\n///   .element {\r\n///     margin: 1em 2em 1em 2em;\r\n///   }\r\n\r\n@function unpack($shorthand) {\r\n  @if length($shorthand) == 1 {\r\n    @return nth($shorthand, 1) nth($shorthand, 1) nth($shorthand, 1) nth($shorthand, 1);\r\n  } @else if length($shorthand) == 2 {\r\n    @return nth($shorthand, 1) nth($shorthand, 2) nth($shorthand, 1) nth($shorthand, 2);\r\n  } @else if length($shorthand) == 3 {\r\n    @return nth($shorthand, 1) nth($shorthand, 2) nth($shorthand, 3) nth($shorthand, 2);\r\n  } @else {\r\n    @return $shorthand;\r\n  }\r\n}\r\n","// Scaling Variables\r\n$golden:           1.618;\r\n$minor-second:     1.067;\r\n$major-second:     1.125;\r\n$minor-third:      1.2;\r\n$major-third:      1.25;\r\n$perfect-fourth:   1.333;\r\n$augmented-fourth: 1.414;\r\n$perfect-fifth:    1.5;\r\n$minor-sixth:      1.6;\r\n$major-sixth:      1.667;\r\n$minor-seventh:    1.778;\r\n$major-seventh:    1.875;\r\n$octave:           2;\r\n$major-tenth:      2.5;\r\n$major-eleventh:   2.667;\r\n$major-twelfth:    3;\r\n$double-octave:    4;\r\n\r\n$modular-scale-ratio: $perfect-fourth !default;\r\n$modular-scale-base: em($em-base) !default;\r\n\r\n@function modular-scale($increment, $value: $modular-scale-base, $ratio: $modular-scale-ratio) {\r\n  $v1: nth($value, 1);\r\n  $v2: nth($value, length($value));\r\n  $value: $v1;\r\n\r\n  // scale $v2 to just above $v1\r\n  @while $v2 > $v1 {\r\n    $v2: ($v2 / $ratio); // will be off-by-1\r\n  }\r\n  @while $v2 < $v1 {\r\n    $v2: ($v2 * $ratio); // will fix off-by-1\r\n  }\r\n\r\n  // check AFTER scaling $v2 to prevent double-counting corner-case\r\n  $double-stranded: $v2 > $v1;\r\n\r\n  @if $increment > 0 {\r\n    @for $i from 1 through $increment {\r\n      @if $double-stranded and ($v1 * $ratio) > $v2 {\r\n        $value: $v2;\r\n        $v2: ($v2 * $ratio);\r\n      } @else {\r\n        $v1: ($v1 * $ratio);\r\n        $value: $v1;\r\n      }\r\n    }\r\n  }\r\n\r\n  @if $increment < 0 {\r\n    // adjust $v2 to just below $v1\r\n    @if $double-stranded {\r\n      $v2: ($v2 / $ratio);\r\n    }\r\n\r\n    @for $i from $increment through -1 {\r\n      @if $double-stranded and ($v1 / $ratio) < $v2 {\r\n        $value: $v2;\r\n        $v2: ($v2 / $ratio);\r\n      } @else {\r\n        $v1: ($v1 / $ratio);\r\n        $value: $v1;\r\n      }\r\n    }\r\n  }\r\n\r\n  @return $value;\r\n}\r\n","//************************************************************************//\r\n// Helper function for str-to-num fn.\r\n// Source: http://sassmeister.com/gist/9647408\r\n//************************************************************************//\r\n@function _convert-units($number, $unit) {\r\n  $strings: \"px\", \"cm\", \"mm\", \"%\", \"ch\", \"pica\", \"in\", \"em\", \"rem\", \"pt\", \"pc\", \"ex\", \"vw\", \"vh\", \"vmin\", \"vmax\", \"deg\", \"rad\", \"grad\", \"turn\";\r\n  $units:   1px, 1cm, 1mm, 1%, 1ch, 1pica, 1in, 1em, 1rem, 1pt, 1pc, 1ex, 1vw, 1vh, 1vmin, 1vmax, 1deg, 1rad, 1grad, 1turn;\r\n  $index: index($strings, $unit);\r\n\r\n  @if not $index {\r\n    @warn \"Unknown unit `#{$unit}`.\";\r\n    @return false;\r\n  }\r\n\r\n  @if type-of($number) != \"number\" {\r\n    @warn \"`#{$number} is not a number`\";\r\n    @return false;\r\n  }\r\n\r\n  @return $number * nth($units, $index);\r\n}\r\n","@charset \"UTF-8\";\r\n\r\n/// Directional-property mixins are shorthands for writing properties like the following\r\n///\r\n/// @ignore You can also use `false` instead of `null`.\r\n///\r\n/// @param {List} $vals\r\n///   List of directional values\r\n///\r\n/// @example scss - Usage\r\n///   .element {\r\n///     @include border-style(dotted null);\r\n///     @include margin(null 0 10px);\r\n///   }\r\n///\r\n/// @example css - CSS Output\r\n///   .element {\r\n///     border-bottom-style: dotted;\r\n///     border-top-style: dotted;\r\n///     margin-bottom: 10px;\r\n///     margin-left: 0;\r\n///     margin-right: 0;\r\n///   }\r\n///\r\n/// @require {function} contains-falsy\r\n///\r\n/// @return {List}\r\n\r\n@function collapse-directionals($vals) {\r\n  $output: null;\r\n\r\n  $a: nth($vals, 1);\r\n  $b: if(length($vals) < 2, $a, nth($vals, 2));\r\n  $c: if(length($vals) < 3, $a, nth($vals, 3));\r\n  $d: if(length($vals) < 2, $a, nth($vals, if(length($vals) < 4, 2, 4)));\r\n\r\n  @if $a == 0 { $a: 0; }\r\n  @if $b == 0 { $b: 0; }\r\n  @if $c == 0 { $c: 0; }\r\n  @if $d == 0 { $d: 0; }\r\n\r\n  @if $a == $b and $a == $c and $a == $d { $output: $a;          }\r\n  @else if $a == $c and $b == $d         { $output: $a $b;       }\r\n  @else if $b == $d                      { $output: $a $b $c;    }\r\n  @else                                  { $output: $a $b $c $d; }\r\n\r\n  @return $output;\r\n}\r\n\r\n/// Output directional properties, for instance `margin`.\r\n///\r\n/// @access private\r\n///\r\n/// @param {String} $pre\r\n///   Prefix to use\r\n/// @param {String} $suf\r\n///   Suffix to use\r\n/// @param {List} $vals\r\n///   List of values\r\n///\r\n/// @require {function} collapse-directionals\r\n/// @require {function} contains-falsy\r\n\r\n@mixin directional-property($pre, $suf, $vals) {\r\n  // Property Names\r\n  $top:    $pre + \"-top\"    + if($suf, \"-#{$suf}\", \"\");\r\n  $bottom: $pre + \"-bottom\" + if($suf, \"-#{$suf}\", \"\");\r\n  $left:   $pre + \"-left\"   + if($suf, \"-#{$suf}\", \"\");\r\n  $right:  $pre + \"-right\"  + if($suf, \"-#{$suf}\", \"\");\r\n  $all:    $pre +             if($suf, \"-#{$suf}\", \"\");\r\n\r\n  $vals: collapse-directionals($vals);\r\n\r\n  @if contains-falsy($vals) {\r\n    @if nth($vals, 1) { #{$top}: nth($vals, 1); }\r\n\r\n    @if length($vals) == 1 {\r\n      @if nth($vals, 1) { #{$right}: nth($vals, 1); }\r\n    } @else {\r\n      @if nth($vals, 2) { #{$right}: nth($vals, 2); }\r\n    }\r\n\r\n    @if length($vals) == 2 {\r\n      @if nth($vals, 1) { #{$bottom}: nth($vals, 1); }\r\n      @if nth($vals, 2) { #{$left}:   nth($vals, 2); }\r\n    } @else if length($vals) == 3 {\r\n      @if nth($vals, 3) { #{$bottom}: nth($vals, 3); }\r\n      @if nth($vals, 2) { #{$left}:   nth($vals, 2); }\r\n    } @else if length($vals) == 4 {\r\n      @if nth($vals, 3) { #{$bottom}: nth($vals, 3); }\r\n      @if nth($vals, 4) { #{$left}:   nth($vals, 4); }\r\n    }\r\n  } @else {\r\n    #{$all}: $vals;\r\n  }\r\n}\r\n","// Used for creating the source string for fonts using @font-face\r\n// Reference: http://goo.gl/Ru1bKP\r\n\r\n@function font-url-prefixer($asset-pipeline) {\r\n  @if $asset-pipeline == true {\r\n    @return font-url;\r\n  } @else {\r\n    @return url;\r\n  }\r\n}\r\n\r\n@function font-source-declaration(\r\n  $font-family,\r\n  $file-path,\r\n  $asset-pipeline,\r\n  $file-formats,\r\n  $font-url) {\r\n\r\n  $src: ();\r\n\r\n  $formats-map: (\r\n    eot:   \"#{$file-path}.eot?#iefix\" format(\"embedded-opentype\"),\r\n    woff2: \"#{$file-path}.woff2\" format(\"woff2\"),\r\n    woff:  \"#{$file-path}.woff\" format(\"woff\"),\r\n    ttf:   \"#{$file-path}.ttf\" format(\"truetype\"),\r\n    svg:   \"#{$file-path}.svg##{$font-family}\" format(\"svg\")\r\n  );\r\n\r\n  @each $key, $values in $formats-map {\r\n    @if contains($file-formats, $key) {\r\n      $file-path: nth($values, 1);\r\n      $font-format: nth($values, 2);\r\n\r\n      @if $asset-pipeline == true {\r\n        $src: append($src, font-url($file-path) $font-format, comma);\r\n      } @else {\r\n        $src: append($src, url($file-path) $font-format, comma);\r\n      }\r\n    }\r\n  }\r\n\r\n  @return $src;\r\n}\r\n","@function _gradient-positions-parser($gradient-type, $gradient-positions) {\r\n  @if $gradient-positions\r\n  and ($gradient-type == linear)\r\n  and (type-of($gradient-positions) != color) {\r\n    $gradient-positions: _linear-positions-parser($gradient-positions);\r\n  }\r\n  @else if $gradient-positions\r\n  and ($gradient-type == radial)\r\n  and (type-of($gradient-positions) != color) {\r\n    $gradient-positions: _radial-positions-parser($gradient-positions);\r\n  }\r\n  @return $gradient-positions;\r\n}\r\n","// Private function for linear-gradient-parser\r\n@function _linear-angle-parser($image, $first-val, $prefix, $suffix) {\r\n  $offset: null;\r\n  $unit-short:  str-slice($first-val, str-length($first-val) - 2, str-length($first-val));\r\n  $unit-long:   str-slice($first-val, str-length($first-val) - 3, str-length($first-val));\r\n\r\n  @if ($unit-long == \"grad\") or\r\n      ($unit-long == \"turn\") {\r\n    $offset: if($unit-long == \"grad\", -100grad * 3, -0.75turn);\r\n  }\r\n\r\n  @else if ($unit-short == \"deg\") or\r\n           ($unit-short == \"rad\") {\r\n    $offset: if($unit-short == \"deg\", -90 * 3, 1.6rad);\r\n  }\r\n\r\n  @if $offset {\r\n    $num: _str-to-num($first-val);\r\n\r\n    @return (\r\n      webkit-image: -webkit- + $prefix + ($offset - $num) + $suffix,\r\n      spec-image: $image\r\n    );\r\n  }\r\n}\r\n","@function _linear-gradient-parser($image) {\r\n  $image: unquote($image);\r\n  $gradients: ();\r\n  $start: str-index($image, \"(\");\r\n  $end: str-index($image, \",\");\r\n  $first-val: str-slice($image, $start + 1, $end - 1);\r\n\r\n  $prefix: str-slice($image, 1, $start);\r\n  $suffix: str-slice($image, $end, str-length($image));\r\n\r\n  $has-multiple-vals: str-index($first-val, \" \");\r\n  $has-single-position: unquote(_position-flipper($first-val) + \"\");\r\n  $has-angle: is-number(str-slice($first-val, 1, 1));\r\n\r\n  @if $has-multiple-vals {\r\n    $gradients: _linear-side-corner-parser($image, $first-val, $prefix, $suffix, $has-multiple-vals);\r\n  }\r\n\r\n  @else if $has-single-position != \"\" {\r\n    $pos: unquote($has-single-position + \"\");\r\n\r\n    $gradients: (\r\n      webkit-image: -webkit- + $image,\r\n      spec-image: $prefix + \"to \" + $pos + $suffix\r\n    );\r\n  }\r\n\r\n  @else if $has-angle {\r\n    // Rotate degree for webkit\r\n    $gradients: _linear-angle-parser($image, $first-val, $prefix, $suffix);\r\n  }\r\n\r\n  @else {\r\n    $gradients: (\r\n      webkit-image: -webkit- + $image,\r\n      spec-image: $image\r\n    );\r\n  }\r\n\r\n  @return $gradients;\r\n}\r\n","@function _linear-positions-parser($pos) {\r\n  $type: type-of(nth($pos, 1));\r\n  $spec: null;\r\n  $degree: null;\r\n  $side: null;\r\n  $corner: null;\r\n  $length: length($pos);\r\n  // Parse Side and corner positions\r\n  @if ($length > 1) {\r\n    @if nth($pos, 1) == \"to\" { // Newer syntax\r\n      $side: nth($pos, 2);\r\n\r\n      @if $length == 2 { // eg. to top\r\n        // Swap for backwards compatability\r\n        $degree: _position-flipper(nth($pos, 2));\r\n      }\r\n      @else if $length == 3 { // eg. to top left\r\n        $corner: nth($pos, 3);\r\n      }\r\n    }\r\n    @else if $length == 2 { // Older syntax (\"top left\")\r\n      $side: _position-flipper(nth($pos, 1));\r\n      $corner: _position-flipper(nth($pos, 2));\r\n    }\r\n\r\n    @if (\"#{$side} #{$corner}\" == \"left top\") or (\"#{$side} #{$corner}\" == \"top left\") {\r\n      $degree: _position-flipper(#{$side}) _position-flipper(#{$corner});\r\n    }\r\n    @else if (\"#{$side} #{$corner}\" == \"right top\") or (\"#{$side} #{$corner}\" == \"top right\") {\r\n      $degree: _position-flipper(#{$side}) _position-flipper(#{$corner});\r\n    }\r\n    @else if (\"#{$side} #{$corner}\" == \"right bottom\") or (\"#{$side} #{$corner}\" == \"bottom right\") {\r\n      $degree: _position-flipper(#{$side}) _position-flipper(#{$corner});\r\n    }\r\n    @else if (\"#{$side} #{$corner}\" == \"left bottom\") or (\"#{$side} #{$corner}\" == \"bottom left\") {\r\n      $degree: _position-flipper(#{$side}) _position-flipper(#{$corner});\r\n    }\r\n    $spec: to $side $corner;\r\n  }\r\n  @else if $length == 1 {\r\n    // Swap for backwards compatability\r\n    @if $type == string {\r\n      $degree: $pos;\r\n      $spec: to _position-flipper($pos);\r\n    }\r\n    @else {\r\n      $degree: -270 - $pos; //rotate the gradient opposite from spec\r\n      $spec: $pos;\r\n    }\r\n  }\r\n  $degree: unquote($degree + \",\");\r\n  $spec:   unquote($spec + \",\");\r\n  @return $degree $spec;\r\n}\r\n\r\n@function _position-flipper($pos) {\r\n  @return if($pos == left, right, null)\r\n         if($pos == right, left, null)\r\n         if($pos == top, bottom, null)\r\n         if($pos == bottom, top, null);\r\n}\r\n","// Private function for linear-gradient-parser\r\n@function _linear-side-corner-parser($image, $first-val, $prefix, $suffix, $has-multiple-vals) {\r\n  $val-1: str-slice($first-val, 1, $has-multiple-vals - 1);\r\n  $val-2: str-slice($first-val, $has-multiple-vals + 1, str-length($first-val));\r\n  $val-3: null;\r\n  $has-val-3: str-index($val-2, \" \");\r\n\r\n  @if $has-val-3 {\r\n    $val-3: str-slice($val-2, $has-val-3 + 1, str-length($val-2));\r\n    $val-2: str-slice($val-2, 1, $has-val-3 - 1);\r\n  }\r\n\r\n  $pos: _position-flipper($val-1) _position-flipper($val-2) _position-flipper($val-3);\r\n  $pos: unquote($pos + \"\");\r\n\r\n  // Use old spec for webkit\r\n  @if $val-1 == \"to\" {\r\n    @return (\r\n      webkit-image: -webkit- + $prefix + $pos + $suffix,\r\n      spec-image: $image\r\n    );\r\n  }\r\n\r\n  // Bring the code up to spec\r\n  @else {\r\n    @return (\r\n      webkit-image: -webkit- + $image,\r\n      spec-image: $prefix + \"to \" + $pos + $suffix\r\n    );\r\n  }\r\n}\r\n","@function _radial-arg-parser($g1, $g2, $pos, $shape-size) {\r\n  @each $value in $g1, $g2 {\r\n    $first-val: nth($value, 1);\r\n    $pos-type:  type-of($first-val);\r\n    $spec-at-index: null;\r\n\r\n    // Determine if spec was passed to mixin\r\n    @if type-of($value) == list {\r\n      $spec-at-index: if(index($value, at), index($value, at), false);\r\n    }\r\n    @if $spec-at-index {\r\n      @if $spec-at-index > 1 {\r\n        @for $i from 1 through ($spec-at-index - 1) {\r\n          $shape-size: $shape-size nth($value, $i);\r\n        }\r\n        @for $i from ($spec-at-index + 1) through length($value) {\r\n          $pos: $pos nth($value, $i);\r\n        }\r\n      }\r\n      @else if $spec-at-index == 1 {\r\n        @for $i from ($spec-at-index + 1) through length($value) {\r\n          $pos: $pos nth($value, $i);\r\n        }\r\n      }\r\n      $g1: null;\r\n    }\r\n\r\n    // If not spec calculate correct values\r\n    @else {\r\n      @if ($pos-type != color) or ($first-val != \"transparent\") {\r\n        @if ($pos-type == number)\r\n        or ($first-val == \"center\")\r\n        or ($first-val == \"top\")\r\n        or ($first-val == \"right\")\r\n        or ($first-val == \"bottom\")\r\n        or ($first-val == \"left\") {\r\n\r\n          $pos: $value;\r\n\r\n          @if $pos == $g1 {\r\n            $g1: null;\r\n          }\r\n        }\r\n\r\n        @else if\r\n           ($first-val == \"ellipse\")\r\n        or ($first-val == \"circle\")\r\n        or ($first-val == \"closest-side\")\r\n        or ($first-val == \"closest-corner\")\r\n        or ($first-val == \"farthest-side\")\r\n        or ($first-val == \"farthest-corner\")\r\n        or ($first-val == \"contain\")\r\n        or ($first-val == \"cover\") {\r\n\r\n          $shape-size: $value;\r\n\r\n          @if $value == $g1 {\r\n            $g1: null;\r\n          }\r\n\r\n          @else if $value == $g2 {\r\n            $g2: null;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  @return $g1, $g2, $pos, $shape-size;\r\n}\r\n","@function _radial-positions-parser($gradient-pos) {\r\n  $shape-size: nth($gradient-pos, 1);\r\n  $pos:        nth($gradient-pos, 2);\r\n  $shape-size-spec: _shape-size-stripper($shape-size);\r\n\r\n  $pre-spec: unquote(if($pos, \"#{$pos}, \", null))\r\n             unquote(if($shape-size, \"#{$shape-size},\", null));\r\n  $pos-spec: if($pos, \"at #{$pos}\", null);\r\n\r\n  $spec: \"#{$shape-size-spec} #{$pos-spec}\";\r\n\r\n  // Add comma\r\n  @if ($spec != \"  \") {\r\n    $spec: \"#{$spec},\";\r\n  }\r\n\r\n  @return $pre-spec $spec;\r\n}\r\n","@function _radial-gradient-parser($image) {\r\n  $image: unquote($image);\r\n  $gradients: ();\r\n  $start: str-index($image, \"(\");\r\n  $end: str-index($image, \",\");\r\n  $first-val: str-slice($image, $start + 1, $end - 1);\r\n\r\n  $prefix: str-slice($image, 1, $start);\r\n  $suffix: str-slice($image, $end, str-length($image));\r\n\r\n  $is-spec-syntax: str-index($first-val, \"at\");\r\n\r\n  @if $is-spec-syntax and $is-spec-syntax > 1 {\r\n    $keyword: str-slice($first-val, 1, $is-spec-syntax - 2);\r\n    $pos: str-slice($first-val, $is-spec-syntax + 3, str-length($first-val));\r\n    $pos: append($pos, $keyword, comma);\r\n\r\n    $gradients: (\r\n      webkit-image: -webkit- + $prefix + $pos + $suffix,\r\n      spec-image: $image\r\n    );\r\n  }\r\n\r\n  @else if $is-spec-syntax == 1 {\r\n    $pos: str-slice($first-val, $is-spec-syntax + 3, str-length($first-val));\r\n\r\n    $gradients: (\r\n      webkit-image: -webkit- + $prefix + $pos + $suffix,\r\n      spec-image: $image\r\n    );\r\n  }\r\n\r\n  @else if str-index($image, \"cover\") or str-index($image, \"contain\") {\r\n    @warn \"Radial-gradient needs to be updated to conform to latest spec.\";\r\n\r\n    $gradients: (\r\n      webkit-image: null,\r\n      spec-image: $image\r\n    );\r\n  }\r\n\r\n  @else {\r\n    $gradients: (\r\n      webkit-image: -webkit- + $image,\r\n      spec-image: $image\r\n    );\r\n  }\r\n\r\n  @return $gradients;\r\n}\r\n","// User for linear and radial gradients within background-image or border-image properties\r\n\r\n@function _render-gradients($gradient-positions, $gradients, $gradient-type, $vendor: false) {\r\n  $pre-spec: null;\r\n  $spec: null;\r\n  $vendor-gradients: null;\r\n  @if $gradient-type == linear {\r\n    @if $gradient-positions {\r\n      $pre-spec: nth($gradient-positions, 1);\r\n      $spec:     nth($gradient-positions, 2);\r\n    }\r\n  }\r\n  @else if $gradient-type == radial {\r\n    $pre-spec: nth($gradient-positions, 1);\r\n    $spec:     nth($gradient-positions, 2);\r\n  }\r\n\r\n  @if $vendor {\r\n    $vendor-gradients: -#{$vendor}-#{$gradient-type}-gradient(#{$pre-spec} $gradients);\r\n  }\r\n  @else if $vendor == false {\r\n    $vendor-gradients: \"#{$gradient-type}-gradient(#{$spec} #{$gradients})\";\r\n    $vendor-gradients: unquote($vendor-gradients);\r\n  }\r\n  @return $vendor-gradients;\r\n}\r\n","@function _shape-size-stripper($shape-size) {\r\n  $shape-size-spec: null;\r\n  @each $value in $shape-size {\r\n    @if ($value == \"cover\") or ($value == \"contain\") {\r\n      $value: null;\r\n    }\r\n    $shape-size-spec: \"#{$shape-size-spec} #{$value}\";\r\n  }\r\n  @return $shape-size-spec;\r\n}\r\n","//************************************************************************//\r\n// Helper function for linear/radial-gradient-parsers.\r\n// Source: http://sassmeister.com/gist/9647408\r\n//************************************************************************//\r\n@function _str-to-num($string) {\r\n  // Matrices\r\n  $strings: \"0\" \"1\" \"2\" \"3\" \"4\" \"5\" \"6\" \"7\" \"8\" \"9\";\r\n  $numbers:  0   1   2   3   4   5   6   7   8   9;\r\n\r\n  // Result\r\n  $result: 0;\r\n  $divider: 0;\r\n  $minus: false;\r\n\r\n  // Looping through all characters\r\n  @for $i from 1 through str-length($string) {\r\n    $character: str-slice($string, $i, $i);\r\n    $index: index($strings, $character);\r\n\r\n    @if $character == \"-\" {\r\n      $minus: true;\r\n    }\r\n\r\n    @else if $character == \".\" {\r\n      $divider: 1;\r\n    }\r\n\r\n    @else {\r\n      @if not $index {\r\n        $result: if($minus, $result * -1, $result);\r\n        @return _convert-units($result, str-slice($string, $i));\r\n      }\r\n\r\n      $number: nth($numbers, $index);\r\n\r\n      @if $divider == 0 {\r\n        $result: $result * 10;\r\n      }\r\n\r\n      @else {\r\n        // Move the decimal dot to the left\r\n        $divider: $divider * 10;\r\n        $number: $number / $divider;\r\n      }\r\n\r\n      $result: $result + $number;\r\n    }\r\n  }\r\n  @return if($minus, $result * -1, $result);\r\n}\r\n","// http://www.w3.org/TR/css3-animations/#the-animation-name-property-\r\n// Each of these mixins support comma separated lists of values, which allows different transitions for individual properties to be described in a single style rule. Each value in the list corresponds to the value at that same position in the other properties.\r\n\r\n@mixin animation($animations...) {\r\n  @include prefixer(animation, $animations, webkit moz spec);\r\n}\r\n\r\n@mixin animation-name($names...) {\r\n  @include prefixer(animation-name, $names, webkit moz spec);\r\n}\r\n\r\n@mixin animation-duration($times...) {\r\n  @include prefixer(animation-duration, $times, webkit moz spec);\r\n}\r\n\r\n@mixin animation-timing-function($motions...) {\r\n  // ease | linear | ease-in | ease-out | ease-in-out\r\n  @include prefixer(animation-timing-function, $motions, webkit moz spec);\r\n}\r\n\r\n@mixin animation-iteration-count($values...) {\r\n  // infinite | <number>\r\n  @include prefixer(animation-iteration-count, $values, webkit moz spec);\r\n}\r\n\r\n@mixin animation-direction($directions...) {\r\n  // normal | alternate\r\n  @include prefixer(animation-direction, $directions, webkit moz spec);\r\n}\r\n\r\n@mixin animation-play-state($states...) {\r\n  // running | paused\r\n  @include prefixer(animation-play-state, $states, webkit moz spec);\r\n}\r\n\r\n@mixin animation-delay($times...) {\r\n  @include prefixer(animation-delay, $times, webkit moz spec);\r\n}\r\n\r\n@mixin animation-fill-mode($modes...) {\r\n  // none | forwards | backwards | both\r\n  @include prefixer(animation-fill-mode, $modes, webkit moz spec);\r\n}\r\n","@mixin appearance($value) {\r\n  @include prefixer(appearance, $value, webkit moz ms o spec);\r\n}\r\n","@mixin backface-visibility($visibility) {\r\n  @include prefixer(backface-visibility, $visibility, webkit spec);\r\n}\r\n","//************************************************************************//\r\n// Background property for adding multiple backgrounds using shorthand\r\n// notation.\r\n//************************************************************************//\r\n\r\n@mixin background($backgrounds...) {\r\n  $webkit-backgrounds: ();\r\n  $spec-backgrounds: ();\r\n\r\n  @each $background in $backgrounds {\r\n    $webkit-background: ();\r\n    $spec-background: ();\r\n    $background-type: type-of($background);\r\n\r\n    @if $background-type == string or $background-type == list {\r\n      $background-str: if($background-type == list, nth($background, 1), $background);\r\n\r\n      $url-str:       str-slice($background-str, 1, 3);\r\n      $gradient-type: str-slice($background-str, 1, 6);\r\n\r\n      @if $url-str == \"url\" {\r\n        $webkit-background: $background;\r\n        $spec-background:   $background;\r\n      }\r\n\r\n      @else if $gradient-type == \"linear\" {\r\n        $gradients: _linear-gradient-parser(\"#{$background}\");\r\n        $webkit-background: map-get($gradients, webkit-image);\r\n        $spec-background:   map-get($gradients, spec-image);\r\n      }\r\n\r\n      @else if $gradient-type == \"radial\" {\r\n        $gradients: _radial-gradient-parser(\"#{$background}\");\r\n        $webkit-background: map-get($gradients, webkit-image);\r\n        $spec-background:   map-get($gradients, spec-image);\r\n      }\r\n\r\n      @else {\r\n        $webkit-background: $background;\r\n        $spec-background:   $background;\r\n      }\r\n    }\r\n\r\n    @else {\r\n      $webkit-background: $background;\r\n      $spec-background:   $background;\r\n    }\r\n\r\n    $webkit-backgrounds: append($webkit-backgrounds, $webkit-background, comma);\r\n    $spec-backgrounds:   append($spec-backgrounds,   $spec-background,   comma);\r\n  }\r\n\r\n  background: $webkit-backgrounds;\r\n  background: $spec-backgrounds;\r\n}\r\n","//************************************************************************//\r\n// Background-image property for adding multiple background images with\r\n// gradients, or for stringing multiple gradients together.\r\n//************************************************************************//\r\n\r\n@mixin background-image($images...) {\r\n  $webkit-images: ();\r\n  $spec-images: ();\r\n\r\n  @each $image in $images {\r\n    $webkit-image: ();\r\n    $spec-image: ();\r\n\r\n    @if (type-of($image) == string) {\r\n      $url-str:       str-slice($image, 1, 3);\r\n      $gradient-type: str-slice($image, 1, 6);\r\n\r\n      @if $url-str == \"url\" {\r\n        $webkit-image: $image;\r\n        $spec-image:   $image;\r\n      }\r\n\r\n      @else if $gradient-type == \"linear\" {\r\n        $gradients: _linear-gradient-parser($image);\r\n        $webkit-image:  map-get($gradients, webkit-image);\r\n        $spec-image:    map-get($gradients, spec-image);\r\n      }\r\n\r\n      @else if $gradient-type == \"radial\" {\r\n        $gradients: _radial-gradient-parser($image);\r\n        $webkit-image: map-get($gradients, webkit-image);\r\n        $spec-image:   map-get($gradients, spec-image);\r\n      }\r\n    }\r\n\r\n    $webkit-images: append($webkit-images, $webkit-image, comma);\r\n    $spec-images:   append($spec-images,   $spec-image,   comma);\r\n  }\r\n\r\n  background-image: $webkit-images;\r\n  background-image: $spec-images;\r\n}\r\n","@mixin border-image($borders...) {\r\n  $webkit-borders: ();\r\n  $spec-borders: ();\r\n\r\n  @each $border in $borders {\r\n    $webkit-border: ();\r\n    $spec-border: ();\r\n    $border-type: type-of($border);\r\n\r\n    @if $border-type == string or list {\r\n      $border-str: if($border-type == list, nth($border, 1), $border);\r\n\r\n      $url-str:       str-slice($border-str, 1, 3);\r\n      $gradient-type: str-slice($border-str, 1, 6);\r\n\r\n      @if $url-str == \"url\" {\r\n        $webkit-border: $border;\r\n        $spec-border:   $border;\r\n      }\r\n\r\n      @else if $gradient-type == \"linear\" {\r\n        $gradients: _linear-gradient-parser(\"#{$border}\");\r\n        $webkit-border: map-get($gradients, webkit-image);\r\n        $spec-border:   map-get($gradients, spec-image);\r\n      }\r\n\r\n      @else if $gradient-type == \"radial\" {\r\n        $gradients: _radial-gradient-parser(\"#{$border}\");\r\n        $webkit-border: map-get($gradients, webkit-image);\r\n        $spec-border:   map-get($gradients, spec-image);\r\n      }\r\n\r\n      @else {\r\n        $webkit-border: $border;\r\n        $spec-border:   $border;\r\n      }\r\n    }\r\n\r\n    @else {\r\n      $webkit-border: $border;\r\n      $spec-border:   $border;\r\n    }\r\n\r\n    $webkit-borders: append($webkit-borders, $webkit-border, comma);\r\n    $spec-borders:   append($spec-borders,   $spec-border,   comma);\r\n  }\r\n\r\n  -webkit-border-image: $webkit-borders;\r\n          border-image: $spec-borders;\r\n          border-style: solid;\r\n}\r\n\r\n//Examples:\r\n// @include border-image(url(\"image.png\"));\r\n// @include border-image(url(\"image.png\") 20 stretch);\r\n// @include border-image(linear-gradient(45deg, orange, yellow));\r\n// @include border-image(linear-gradient(45deg, orange, yellow) stretch);\r\n// @include border-image(linear-gradient(45deg, orange, yellow) 20 30 40 50 stretch round);\r\n// @include border-image(radial-gradient(top, cover, orange, yellow, orange));\r\n","@mixin calc($property, $value) {\r\n  #{$property}: -webkit-calc(#{$value});\r\n  #{$property}: calc(#{$value});\r\n}\r\n","@mixin columns($arg: auto) {\r\n  // <column-count> || <column-width>\r\n  @include prefixer(columns, $arg, webkit moz spec);\r\n}\r\n\r\n@mixin column-count($int: auto) {\r\n  // auto || integer\r\n  @include prefixer(column-count, $int, webkit moz spec);\r\n}\r\n\r\n@mixin column-gap($length: normal) {\r\n  // normal || length\r\n  @include prefixer(column-gap, $length, webkit moz spec);\r\n}\r\n\r\n@mixin column-fill($arg: auto) {\r\n  // auto || length\r\n  @include prefixer(column-fill, $arg, webkit moz spec);\r\n}\r\n\r\n@mixin column-rule($arg) {\r\n  // <border-width> || <border-style> || <color>\r\n  @include prefixer(column-rule, $arg, webkit moz spec);\r\n}\r\n\r\n@mixin column-rule-color($color) {\r\n  @include prefixer(column-rule-color, $color, webkit moz spec);\r\n}\r\n\r\n@mixin column-rule-style($style: none) {\r\n  // none | hidden | dashed | dotted | double | groove | inset | inset | outset | ridge | solid\r\n  @include prefixer(column-rule-style, $style, webkit moz spec);\r\n}\r\n\r\n@mixin column-rule-width ($width: none) {\r\n  @include prefixer(column-rule-width, $width, webkit moz spec);\r\n}\r\n\r\n@mixin column-span($arg: none) {\r\n  // none || all\r\n  @include prefixer(column-span, $arg, webkit moz spec);\r\n}\r\n\r\n@mixin column-width($length: auto) {\r\n  // auto || length\r\n  @include prefixer(column-width, $length, webkit moz spec);\r\n}\r\n","@mixin filter($function: none) {\r\n  // <filter-function> [<filter-function]* | none\r\n  @include prefixer(filter, $function, webkit spec);\r\n}\r\n","// CSS3 Flexible Box Model and property defaults\r\n\r\n// Custom shorthand notation for flexbox\r\n@mixin box($orient: inline-axis, $pack: start, $align: stretch) {\r\n  @include display-box;\r\n  @include box-orient($orient);\r\n  @include box-pack($pack);\r\n  @include box-align($align);\r\n}\r\n\r\n@mixin display-box {\r\n  display: -webkit-box;\r\n  display: -moz-box;\r\n  display: -ms-flexbox; // IE 10\r\n  display: box;\r\n}\r\n\r\n@mixin box-orient($orient: inline-axis) {\r\n// horizontal|vertical|inline-axis|block-axis|inherit\r\n  @include prefixer(box-orient, $orient, webkit moz spec);\r\n}\r\n\r\n@mixin box-pack($pack: start) {\r\n// start|end|center|justify\r\n  @include prefixer(box-pack, $pack, webkit moz spec);\r\n  -ms-flex-pack: $pack; // IE 10\r\n}\r\n\r\n@mixin box-align($align: stretch) {\r\n// start|end|center|baseline|stretch\r\n  @include prefixer(box-align, $align, webkit moz spec);\r\n  -ms-flex-align: $align; // IE 10\r\n}\r\n\r\n@mixin box-direction($direction: normal) {\r\n// normal|reverse|inherit\r\n  @include prefixer(box-direction, $direction, webkit moz spec);\r\n  -ms-flex-direction: $direction; // IE 10\r\n}\r\n\r\n@mixin box-lines($lines: single) {\r\n// single|multiple\r\n  @include prefixer(box-lines, $lines, webkit moz spec);\r\n}\r\n\r\n@mixin box-ordinal-group($int: 1) {\r\n  @include prefixer(box-ordinal-group, $int, webkit moz spec);\r\n  -ms-flex-order: $int; // IE 10\r\n}\r\n\r\n@mixin box-flex($value: 0) {\r\n  @include prefixer(box-flex, $value, webkit moz spec);\r\n  -ms-flex: $value; // IE 10\r\n}\r\n\r\n@mixin box-flex-group($int: 1) {\r\n  @include prefixer(box-flex-group, $int, webkit moz spec);\r\n}\r\n\r\n// CSS3 Flexible Box Model and property defaults\r\n// Unified attributes for 2009, 2011, and 2012 flavours.\r\n\r\n// 2009 - display (box | inline-box)\r\n// 2011 - display (flexbox | inline-flexbox)\r\n// 2012 - display (flex | inline-flex)\r\n@mixin display($value) {\r\n// flex | inline-flex\r\n  @if $value == \"flex\" {\r\n    // 2009\r\n    display: -webkit-box;\r\n    display: -moz-box;\r\n    display: box;\r\n\r\n    // 2012\r\n    display: -webkit-flex;\r\n    display: -moz-flex;\r\n    display: -ms-flexbox; // 2011 (IE 10)\r\n    display: flex;\r\n  } @else if $value == \"inline-flex\" {\r\n    display: -webkit-inline-box;\r\n    display: -moz-inline-box;\r\n    display: inline-box;\r\n\r\n    display: -webkit-inline-flex;\r\n    display: -moz-inline-flex;\r\n    display: -ms-inline-flexbox;\r\n    display: inline-flex;\r\n  } @else {\r\n    display: $value;\r\n  }\r\n}\r\n\r\n// 2009 - box-flex (integer)\r\n// 2011 - flex (decimal | width decimal)\r\n// 2012 - flex (integer integer width)\r\n@mixin flex($value) {\r\n\r\n  // Grab flex-grow for older browsers.\r\n  $flex-grow: nth($value, 1);\r\n\r\n  // 2009\r\n  @include prefixer(box-flex, $flex-grow, webkit moz spec);\r\n\r\n  // 2011 (IE 10), 2012\r\n  @include prefixer(flex, $value, webkit moz ms spec);\r\n}\r\n\r\n// 2009 - box-orient ( horizontal | vertical | inline-axis | block-axis)\r\n//      - box-direction (normal | reverse)\r\n// 2011 - flex-direction (row | row-reverse | column | column-reverse)\r\n// 2012 - flex-direction (row | row-reverse | column | column-reverse)\r\n@mixin flex-direction($value: row) {\r\n\r\n  // Alt values.\r\n  $value-2009: $value;\r\n  $value-2011: $value;\r\n  $direction: normal;\r\n\r\n  @if $value == row {\r\n    $value-2009: horizontal;\r\n  } @else if $value == \"row-reverse\" {\r\n    $value-2009: horizontal;\r\n    $direction: reverse;\r\n  } @else if $value == column {\r\n    $value-2009: vertical;\r\n  } @else if $value == \"column-reverse\" {\r\n    $value-2009: vertical;\r\n    $direction: reverse;\r\n  }\r\n\r\n  // 2009\r\n  @include prefixer(box-orient, $value-2009, webkit moz spec);\r\n  @include prefixer(box-direction, $direction, webkit moz spec);\r\n\r\n  // 2012\r\n  @include prefixer(flex-direction, $value, webkit moz spec);\r\n\r\n  // 2011 (IE 10)\r\n  -ms-flex-direction: $value;\r\n}\r\n\r\n// 2009 - box-lines (single | multiple)\r\n// 2011 - flex-wrap (nowrap | wrap | wrap-reverse)\r\n// 2012 - flex-wrap (nowrap | wrap | wrap-reverse)\r\n@mixin flex-wrap($value: nowrap) {\r\n  // Alt values\r\n  $alt-value: $value;\r\n  @if $value == nowrap {\r\n    $alt-value: single;\r\n  } @else if $value == wrap {\r\n    $alt-value: multiple;\r\n  } @else if $value == \"wrap-reverse\" {\r\n    $alt-value: multiple;\r\n  }\r\n\r\n  @include prefixer(box-lines, $alt-value, webkit moz spec);\r\n  @include prefixer(flex-wrap, $value, webkit moz ms spec);\r\n}\r\n\r\n// 2009 - TODO: parse values into flex-direction/flex-wrap\r\n// 2011 - TODO: parse values into flex-direction/flex-wrap\r\n// 2012 - flex-flow (flex-direction || flex-wrap)\r\n@mixin flex-flow($value) {\r\n  @include prefixer(flex-flow, $value, webkit moz spec);\r\n}\r\n\r\n// 2009 - box-ordinal-group (integer)\r\n// 2011 - flex-order (integer)\r\n// 2012 - order (integer)\r\n@mixin order($int: 0) {\r\n  // 2009\r\n  @include prefixer(box-ordinal-group, $int, webkit moz spec);\r\n\r\n  // 2012\r\n  @include prefixer(order, $int, webkit moz spec);\r\n\r\n  // 2011 (IE 10)\r\n  -ms-flex-order: $int;\r\n}\r\n\r\n// 2012 - flex-grow (number)\r\n@mixin flex-grow($number: 0) {\r\n  @include prefixer(flex-grow, $number, webkit moz spec);\r\n  -ms-flex-positive: $number;\r\n}\r\n\r\n// 2012 - flex-shrink (number)\r\n@mixin flex-shrink($number: 1) {\r\n  @include prefixer(flex-shrink, $number, webkit moz spec);\r\n  -ms-flex-negative: $number;\r\n}\r\n\r\n// 2012 - flex-basis (number)\r\n@mixin flex-basis($width: auto) {\r\n  @include prefixer(flex-basis, $width, webkit moz spec);\r\n  -ms-flex-preferred-size: $width;\r\n}\r\n\r\n// 2009 - box-pack (start | end | center | justify)\r\n// 2011 - flex-pack (start | end | center | justify)\r\n// 2012 - justify-content (flex-start | flex-end | center | space-between | space-around)\r\n@mixin justify-content($value: flex-start) {\r\n\r\n  // Alt values.\r\n  $alt-value: $value;\r\n  @if $value == \"flex-start\" {\r\n    $alt-value: start;\r\n  } @else if $value == \"flex-end\" {\r\n    $alt-value: end;\r\n  } @else if $value == \"space-between\" {\r\n    $alt-value: justify;\r\n  } @else if $value == \"space-around\" {\r\n    $alt-value: distribute;\r\n  }\r\n\r\n  // 2009\r\n  @include prefixer(box-pack, $alt-value, webkit moz spec);\r\n\r\n  // 2012\r\n  @include prefixer(justify-content, $value, webkit moz ms o spec);\r\n\r\n  // 2011 (IE 10)\r\n  -ms-flex-pack: $alt-value;\r\n}\r\n\r\n// 2009 - box-align (start | end | center | baseline | stretch)\r\n// 2011 - flex-align (start | end | center | baseline | stretch)\r\n// 2012 - align-items (flex-start | flex-end | center | baseline | stretch)\r\n@mixin align-items($value: stretch) {\r\n\r\n  $alt-value: $value;\r\n\r\n  @if $value == \"flex-start\" {\r\n    $alt-value: start;\r\n  } @else if $value == \"flex-end\" {\r\n    $alt-value: end;\r\n  }\r\n\r\n  // 2009\r\n  @include prefixer(box-align, $alt-value, webkit moz spec);\r\n\r\n  // 2012\r\n  @include prefixer(align-items, $value, webkit moz ms o spec);\r\n\r\n  // 2011 (IE 10)\r\n  -ms-flex-align: $alt-value;\r\n}\r\n\r\n// 2011 - flex-item-align (auto | start | end | center | baseline | stretch)\r\n// 2012 - align-self (auto | flex-start | flex-end | center | baseline | stretch)\r\n@mixin align-self($value: auto) {\r\n\r\n  $value-2011: $value;\r\n  @if $value == \"flex-start\" {\r\n    $value-2011: start;\r\n  } @else if $value == \"flex-end\" {\r\n    $value-2011: end;\r\n  }\r\n\r\n  // 2012\r\n  @include prefixer(align-self, $value, webkit moz spec);\r\n\r\n  // 2011 (IE 10)\r\n  -ms-flex-item-align: $value-2011;\r\n}\r\n\r\n// 2011 - flex-line-pack (start | end | center | justify | distribute | stretch)\r\n// 2012 - align-content (flex-start | flex-end | center | space-between | space-around | stretch)\r\n@mixin align-content($value: stretch) {\r\n\r\n  $value-2011: $value;\r\n  @if $value == \"flex-start\" {\r\n    $value-2011: start;\r\n  } @else if $value == \"flex-end\" {\r\n    $value-2011: end;\r\n  } @else if $value == \"space-between\" {\r\n    $value-2011: justify;\r\n  } @else if $value == \"space-around\" {\r\n    $value-2011: distribute;\r\n  }\r\n\r\n  // 2012\r\n  @include prefixer(align-content, $value, webkit moz spec);\r\n\r\n  // 2011 (IE 10)\r\n  -ms-flex-line-pack: $value-2011;\r\n}\r\n","@mixin font-face(\r\n  $font-family,\r\n  $file-path,\r\n  $weight: normal,\r\n  $style: normal,\r\n  $asset-pipeline: $asset-pipeline,\r\n  $file-formats: eot woff2 woff ttf svg) {\r\n\r\n  $font-url-prefix: font-url-prefixer($asset-pipeline);\r\n\r\n  @font-face {\r\n    font-family: $font-family;\r\n    font-style: $style;\r\n    font-weight: $weight;\r\n\r\n    src: font-source-declaration(\r\n      $font-family,\r\n      $file-path,\r\n      $asset-pipeline,\r\n      $file-formats,\r\n      $font-url-prefix\r\n    );\r\n  }\r\n}\r\n","@mixin font-feature-settings($settings...) {\r\n  @if length($settings) == 0 { $settings: none; }\r\n  @include prefixer(font-feature-settings, $settings, webkit moz ms spec);\r\n}\r\n","// HiDPI mixin. Default value set to 1.3 to target Google Nexus 7 (http://bjango.com/articles/min-device-pixel-ratio/)\r\n@mixin hidpi($ratio: 1.3) {\r\n  @media only screen and (-webkit-min-device-pixel-ratio: $ratio),\r\n  only screen and (min--moz-device-pixel-ratio: $ratio),\r\n  only screen and (-o-min-device-pixel-ratio: #{$ratio}/1),\r\n  only screen and (min-resolution: round($ratio * 96dpi)),\r\n  only screen and (min-resolution: $ratio * 1dppx) {\r\n    @content;\r\n  }\r\n}\r\n","@mixin hyphens($hyphenation: none) {\r\n  // none | manual | auto\r\n  @include prefixer(hyphens, $hyphenation, webkit moz ms spec);\r\n}\r\n","@mixin image-rendering ($mode:auto) {\r\n\r\n  @if ($mode == crisp-edges) {\r\n    -ms-interpolation-mode: nearest-neighbor; // IE8+\r\n    image-rendering: -moz-crisp-edges;\r\n    image-rendering: -o-crisp-edges;\r\n    image-rendering: -webkit-optimize-contrast;\r\n    image-rendering: crisp-edges;\r\n  }\r\n\r\n  @else {\r\n    image-rendering: $mode;\r\n  }\r\n}\r\n","// Adds keyframes blocks for supported prefixes, removing redundant prefixes in the block's content\r\n@mixin keyframes($name) {\r\n  $original-prefix-for-webkit:    $prefix-for-webkit;\r\n  $original-prefix-for-mozilla:   $prefix-for-mozilla;\r\n  $original-prefix-for-microsoft: $prefix-for-microsoft;\r\n  $original-prefix-for-opera:     $prefix-for-opera;\r\n  $original-prefix-for-spec:      $prefix-for-spec;\r\n\r\n  @if $original-prefix-for-webkit {\r\n    @include disable-prefix-for-all();\r\n    $prefix-for-webkit: true !global;\r\n    @-webkit-keyframes #{$name} {\r\n      @content;\r\n    }\r\n  }\r\n\r\n  @if $original-prefix-for-mozilla {\r\n    @include disable-prefix-for-all();\r\n    $prefix-for-mozilla: true !global;\r\n    @-moz-keyframes #{$name} {\r\n      @content;\r\n    }\r\n  }\r\n\r\n  $prefix-for-webkit:    $original-prefix-for-webkit    !global;\r\n  $prefix-for-mozilla:   $original-prefix-for-mozilla   !global;\r\n  $prefix-for-microsoft: $original-prefix-for-microsoft !global;\r\n  $prefix-for-opera:     $original-prefix-for-opera     !global;\r\n  $prefix-for-spec:      $original-prefix-for-spec      !global;\r\n\r\n  @if $original-prefix-for-spec {\r\n    @keyframes #{$name} {\r\n      @content;\r\n    }\r\n  }\r\n}\r\n","@mixin linear-gradient($pos, $g1, $g2: null,\r\n                       $g3: null, $g4: null,\r\n                       $g5: null, $g6: null,\r\n                       $g7: null, $g8: null,\r\n                       $g9: null, $g10: null,\r\n                       $fallback: null) {\r\n  // Detect what type of value exists in $pos\r\n  $pos-type: type-of(nth($pos, 1));\r\n  $pos-spec: null;\r\n  $pos-degree: null;\r\n\r\n  // If $pos is missing from mixin, reassign vars and add default position\r\n  @if ($pos-type == color) or (nth($pos, 1) == \"transparent\")  {\r\n    $g10: $g9; $g9: $g8; $g8: $g7; $g7: $g6; $g6: $g5;\r\n    $g5: $g4; $g4: $g3; $g3: $g2; $g2: $g1; $g1: $pos;\r\n    $pos: null;\r\n  }\r\n\r\n  @if $pos {\r\n    $positions: _linear-positions-parser($pos);\r\n    $pos-degree: nth($positions, 1);\r\n    $pos-spec:   nth($positions, 2);\r\n  }\r\n\r\n  $full: $g1, $g2, $g3, $g4, $g5, $g6, $g7, $g8, $g9, $g10;\r\n\r\n  // Set $g1 as the default fallback color\r\n  $fallback-color: nth($g1, 1);\r\n\r\n  // If $fallback is a color use that color as the fallback color\r\n  @if (type-of($fallback) == color) or ($fallback == \"transparent\") {\r\n    $fallback-color: $fallback;\r\n  }\r\n\r\n  background-color: $fallback-color;\r\n  background-image: -webkit-linear-gradient($pos-degree $full); // Safari 5.1+, Chrome\r\n  background-image: unquote(\"linear-gradient(#{$pos-spec}#{$full})\");\r\n}\r\n","@mixin perspective($depth: none) {\r\n  // none | <length>\r\n  @include prefixer(perspective, $depth, webkit moz spec);\r\n}\r\n\r\n@mixin perspective-origin($value: 50% 50%) {\r\n  @include prefixer(perspective-origin, $value, webkit moz spec);\r\n}\r\n","@mixin placeholder {\r\n  $placeholders: \":-webkit-input\" \":-moz\" \"-moz\" \"-ms-input\";\r\n  @each $placeholder in $placeholders {\r\n    &:#{$placeholder}-placeholder {\r\n      @content;\r\n    }\r\n  }\r\n}\r\n","// Requires Sass 3.1+\r\n@mixin radial-gradient($g1, $g2,\r\n                       $g3: null, $g4: null,\r\n                       $g5: null, $g6: null,\r\n                       $g7: null, $g8: null,\r\n                       $g9: null, $g10: null,\r\n                       $pos: null,\r\n                       $shape-size: null,\r\n                       $fallback: null) {\r\n\r\n  $data: _radial-arg-parser($g1, $g2, $pos, $shape-size);\r\n  $g1:  nth($data, 1);\r\n  $g2:  nth($data, 2);\r\n  $pos: nth($data, 3);\r\n  $shape-size: nth($data, 4);\r\n\r\n  $full: $g1, $g2, $g3, $g4, $g5, $g6, $g7, $g8, $g9, $g10;\r\n\r\n  // Strip deprecated cover/contain for spec\r\n  $shape-size-spec: _shape-size-stripper($shape-size);\r\n\r\n  // Set $g1 as the default fallback color\r\n  $first-color: nth($full, 1);\r\n  $fallback-color: nth($first-color, 1);\r\n\r\n  @if (type-of($fallback) == color) or ($fallback == \"transparent\") {\r\n    $fallback-color: $fallback;\r\n  }\r\n\r\n  // Add Commas and spaces\r\n  $shape-size: if($shape-size, \"#{$shape-size}, \", null);\r\n  $pos:        if($pos, \"#{$pos}, \", null);\r\n  $pos-spec:   if($pos, \"at #{$pos}\", null);\r\n  $shape-size-spec: if(($shape-size-spec != \" \") and ($pos == null), \"#{$shape-size-spec}, \", \"#{$shape-size-spec} \");\r\n\r\n  background-color:  $fallback-color;\r\n  background-image: -webkit-radial-gradient(unquote(#{$pos}#{$shape-size}#{$full}));\r\n  background-image: unquote(\"radial-gradient(#{$shape-size-spec}#{$pos-spec}#{$full})\");\r\n}\r\n","@charset \"UTF-8\";\r\n\r\n/// Outputs the spec and prefixed versions of the `::selection` pseudo-element.\r\n///\r\n/// @param {Bool} $current-selector [false]\r\n///   If set to `true`, it takes the current element into consideration.\r\n///\r\n/// @example scss - Usage\r\n///   .element {\r\n///     @include selection(true) {\r\n///       background-color: #ffbb52;\r\n///     }\r\n///   }\r\n///\r\n/// @example css - CSS Output\r\n///   .element::-moz-selection {\r\n///     background-color: #ffbb52;\r\n///   }\r\n///\r\n///   .element::selection {\r\n///     background-color: #ffbb52;\r\n///   }\r\n\r\n@mixin selection($current-selector: false) {\r\n  @if $current-selector {\r\n    &::-moz-selection {\r\n      @content;\r\n    }\r\n\r\n    &::selection {\r\n      @content;\r\n    }\r\n  } @else {\r\n    ::-moz-selection {\r\n      @content;\r\n    }\r\n\r\n    ::selection {\r\n      @content;\r\n    }\r\n  }\r\n}\r\n","@mixin text-decoration($value) {\r\n// <text-decoration-line> || <text-decoration-style> || <text-decoration-color>\r\n  @include prefixer(text-decoration, $value, moz);\r\n}\r\n\r\n@mixin text-decoration-line($line: none) {\r\n// none || underline || overline || line-through\r\n  @include prefixer(text-decoration-line, $line, moz);\r\n}\r\n\r\n@mixin text-decoration-style($style: solid) {\r\n// solid || double || dotted || dashed || wavy\r\n  @include prefixer(text-decoration-style, $style, moz webkit);\r\n}\r\n\r\n@mixin text-decoration-color($color: currentColor) {\r\n// currentColor || <color>\r\n  @include prefixer(text-decoration-color, $color, moz);\r\n}\r\n","@mixin transform($property: none) {\r\n  // none | <transform-function>\r\n  @include prefixer(transform, $property, webkit moz ms o spec);\r\n}\r\n\r\n@mixin transform-origin($axes: 50%) {\r\n  // x-axis - left | center | right  | length | %\r\n  // y-axis - top  | center | bottom | length | %\r\n  // z-axis -                          length\r\n  @include prefixer(transform-origin, $axes, webkit moz ms o spec);\r\n}\r\n\r\n@mixin transform-style($style: flat) {\r\n  @include prefixer(transform-style, $style, webkit moz ms o spec);\r\n}\r\n","// Shorthand mixin. Supports multiple parentheses-deliminated values for each variable.\r\n// Example: @include transition (all 2s ease-in-out);\r\n//          @include transition (opacity 1s ease-in 2s, width 2s ease-out);\r\n//          @include transition-property (transform, opacity);\r\n\r\n@mixin transition($properties...) {\r\n  // Fix for vendor-prefix transform property\r\n  $needs-prefixes: false;\r\n  $webkit: ();\r\n  $moz: ();\r\n  $spec: ();\r\n\r\n  // Create lists for vendor-prefixed transform\r\n  @each $list in $properties {\r\n    @if nth($list, 1) == \"transform\" {\r\n      $needs-prefixes: true;\r\n      $list1: -webkit-transform;\r\n      $list2: -moz-transform;\r\n      $list3: ();\r\n\r\n      @each $var in $list {\r\n        $list3: join($list3, $var);\r\n\r\n        @if $var != \"transform\" {\r\n          $list1: join($list1, $var);\r\n          $list2: join($list2, $var);\r\n        }\r\n      }\r\n\r\n      $webkit: append($webkit, $list1);\r\n      $moz:    append($moz,    $list2);\r\n      $spec:   append($spec,   $list3);\r\n    } @else {\r\n      $webkit: append($webkit, $list, comma);\r\n      $moz:    append($moz,    $list, comma);\r\n      $spec:   append($spec,   $list, comma);\r\n    }\r\n  }\r\n\r\n  @if $needs-prefixes {\r\n    -webkit-transition: $webkit;\r\n       -moz-transition: $moz;\r\n            transition: $spec;\r\n  } @else {\r\n    @if length($properties) >= 1 {\r\n      @include prefixer(transition, $properties, webkit moz spec);\r\n    } @else {\r\n      $properties: all 0.15s ease-out 0s;\r\n      @include prefixer(transition, $properties, webkit moz spec);\r\n    }\r\n  }\r\n}\r\n\r\n@mixin transition-property($properties...) {\r\n  -webkit-transition-property: transition-property-names($properties, \"webkit\");\r\n     -moz-transition-property: transition-property-names($properties, \"moz\");\r\n          transition-property: transition-property-names($properties, false);\r\n}\r\n\r\n@mixin transition-duration($times...) {\r\n  @include prefixer(transition-duration, $times, webkit moz spec);\r\n}\r\n\r\n@mixin transition-timing-function($motions...) {\r\n  // ease | linear | ease-in | ease-out | ease-in-out | cubic-bezier()\r\n  @include prefixer(transition-timing-function, $motions, webkit moz spec);\r\n}\r\n\r\n@mixin transition-delay($times...) {\r\n  @include prefixer(transition-delay, $times, webkit moz spec);\r\n}\r\n","@mixin user-select($value: none) {\r\n  @include prefixer(user-select, $value, webkit moz ms spec);\r\n}\r\n","@charset \"UTF-8\";\r\n\r\n/// Provides a quick method for targeting `border-color` on specific sides of a box. Use a `null` value to “skip” a side.\r\n///\r\n/// @param {Arglist} $vals\r\n///   List of arguments\r\n///\r\n/// @example scss - Usage\r\n///   .element {\r\n///     @include border-color(#a60b55 #76cd9c null #e8ae1a);\r\n///   }\r\n///\r\n/// @example css - CSS Output\r\n///   .element {\r\n///     border-left-color: #e8ae1a;\r\n///     border-right-color: #76cd9c;\r\n///     border-top-color: #a60b55;\r\n///   }\r\n///\r\n/// @require {mixin} directional-property\r\n///\r\n/// @output `border-color`\r\n\r\n@mixin border-color($vals...) {\r\n  @include directional-property(border, color, $vals...);\r\n}\r\n","@charset \"UTF-8\";\r\n\r\n/// Provides a quick method for targeting `border-radius` on both corners on the side of a box.\r\n///\r\n/// @param {Number} $radii\r\n///   List of arguments\r\n///\r\n/// @example scss - Usage\r\n///   .element-one {\r\n///     @include border-top-radius(5px);\r\n///   }\r\n///\r\n///   .element-two {\r\n///     @include border-left-radius(3px);\r\n///   }\r\n///\r\n/// @example css - CSS Output\r\n///   .element-one {\r\n///     border-top-left-radius: 5px;\r\n///     border-top-right-radius: 5px;\r\n///   }\r\n///\r\n///   .element-two {\r\n///     border-bottom-left-radius: 3px;\r\n///     border-top-left-radius: 3px;\r\n///   }\r\n///\r\n/// @output `border-radius`\r\n\r\n@mixin border-top-radius($radii) {\r\n  border-top-left-radius: $radii;\r\n  border-top-right-radius: $radii;\r\n}\r\n\r\n@mixin border-right-radius($radii) {\r\n  border-bottom-right-radius: $radii;\r\n  border-top-right-radius: $radii;\r\n}\r\n\r\n@mixin border-bottom-radius($radii) {\r\n  border-bottom-left-radius: $radii;\r\n  border-bottom-right-radius: $radii;\r\n}\r\n\r\n@mixin border-left-radius($radii) {\r\n  border-bottom-left-radius: $radii;\r\n  border-top-left-radius: $radii;\r\n}\r\n","@charset \"UTF-8\";\r\n\r\n/// Provides a quick method for targeting `border-style` on specific sides of a box. Use a `null` value to “skip” a side.\r\n///\r\n/// @param {Arglist} $vals\r\n///   List of arguments\r\n///\r\n/// @example scss - Usage\r\n///   .element {\r\n///     @include border-style(dashed null solid);\r\n///   }\r\n///\r\n/// @example css - CSS Output\r\n///   .element {\r\n///     border-bottom-style: solid;\r\n///     border-top-style: dashed;\r\n///   }\r\n///\r\n/// @require {mixin} directional-property\r\n///\r\n/// @output `border-style`\r\n\r\n@mixin border-style($vals...) {\r\n  @include directional-property(border, style, $vals...);\r\n}\r\n","@charset \"UTF-8\";\r\n\r\n/// Provides a quick method for targeting `border-width` on specific sides of a box. Use a `null` value to “skip” a side.\r\n///\r\n/// @param {Arglist} $vals\r\n///   List of arguments\r\n///\r\n/// @example scss - Usage\r\n///   .element {\r\n///     @include border-width(1em null 20px);\r\n///   }\r\n///\r\n/// @example css - CSS Output\r\n///   .element {\r\n///     border-bottom-width: 20px;\r\n///     border-top-width: 1em;\r\n///   }\r\n///\r\n/// @require {mixin} directional-property\r\n///\r\n/// @output `border-width`\r\n\r\n@mixin border-width($vals...) {\r\n  @include directional-property(border, width, $vals...);\r\n}\r\n","@charset \"UTF-8\";\r\n\r\n/// Generates variables for all buttons. Please note that you must use interpolation on the variable: `#{$all-buttons}`.\r\n///\r\n/// @example scss - Usage\r\n///   #{$all-buttons} {\r\n///     background-color: #f00;\r\n///   }\r\n///\r\n///   #{$all-buttons-focus},\r\n///   #{$all-buttons-hover} {\r\n///     background-color: #0f0;\r\n///   }\r\n///\r\n///   #{$all-buttons-active} {\r\n///     background-color: #00f;\r\n///   }\r\n///\r\n/// @example css - CSS Output\r\n///   button,\r\n///   input[type=\"button\"],\r\n///   input[type=\"reset\"],\r\n///   input[type=\"submit\"] {\r\n///     background-color: #f00;\r\n///   }\r\n///\r\n///   button:focus,\r\n///   input[type=\"button\"]:focus,\r\n///   input[type=\"reset\"]:focus,\r\n///   input[type=\"submit\"]:focus,\r\n///   button:hover,\r\n///   input[type=\"button\"]:hover,\r\n///   input[type=\"reset\"]:hover,\r\n///   input[type=\"submit\"]:hover {\r\n///     background-color: #0f0;\r\n///   }\r\n///\r\n///   button:active,\r\n///   input[type=\"button\"]:active,\r\n///   input[type=\"reset\"]:active,\r\n///   input[type=\"submit\"]:active {\r\n///     background-color: #00f;\r\n///   }\r\n///\r\n/// @require assign-inputs\r\n///\r\n/// @type List\r\n///\r\n/// @todo Remove double assigned variables (Lines 59–62) in v5.0.0\r\n\r\n$buttons-list: 'button',\r\n               'input[type=\"button\"]',\r\n               'input[type=\"reset\"]',\r\n               'input[type=\"submit\"]';\r\n\r\n$all-buttons:        assign-inputs($buttons-list);\r\n$all-buttons-active: assign-inputs($buttons-list, active);\r\n$all-buttons-focus:  assign-inputs($buttons-list, focus);\r\n$all-buttons-hover:  assign-inputs($buttons-list, hover);\r\n\r\n$all-button-inputs:        $all-buttons;\r\n$all-button-inputs-active: $all-buttons-active;\r\n$all-button-inputs-focus:  $all-buttons-focus;\r\n$all-button-inputs-hover:  $all-buttons-hover;\r\n","@charset \"UTF-8\";\r\n\r\n/// Provides an easy way to include a clearfix for containing floats.\r\n///\r\n/// @link http://cssmojo.com/latest_new_clearfix_so_far/\r\n///\r\n/// @example scss - Usage\r\n///   .element {\r\n///     @include clearfix;\r\n///   }\r\n///\r\n/// @example css - CSS Output\r\n///   .element::after {\r\n///     clear: both;\r\n///     content: \"\";\r\n///     display: table;\r\n///   }\r\n\r\n@mixin clearfix {\r\n  &::after {\r\n    clear: both;\r\n    content: \"\";\r\n    display: table;\r\n  }\r\n}\r\n","@charset \"UTF-8\";\r\n\r\n/// Truncates text and adds an ellipsis to represent overflow.\r\n///\r\n/// @param {Number} $width [100%]\r\n///   Max-width for the string to respect before being truncated\r\n///\r\n/// @example scss - Usage\r\n///   .element {\r\n///     @include ellipsis;\r\n///   }\r\n///\r\n/// @example css - CSS Output\r\n///   .element {\r\n///     display: inline-block;\r\n///     max-width: 100%;\r\n///     overflow: hidden;\r\n///     text-overflow: ellipsis;\r\n///     white-space: nowrap;\r\n///     word-wrap: normal;\r\n///   }\r\n\r\n@mixin ellipsis($width: 100%) {\r\n  display: inline-block;\r\n  max-width: $width;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n  word-wrap: normal;\r\n}\r\n","@charset \"UTF-8\";\r\n\r\n/// Georgia font stack.\r\n///\r\n/// @type List\r\n\r\n$georgia: \"Georgia\", \"Cambria\", \"Times New Roman\", \"Times\", serif;\r\n\r\n/// Helvetica font stack.\r\n///\r\n/// @type List\r\n\r\n$helvetica: \"Helvetica Neue\", \"Helvetica\", \"Roboto\", \"Arial\", sans-serif;\r\n\r\n/// Lucida Grande font stack.\r\n///\r\n/// @type List\r\n\r\n$lucida-grande: \"Lucida Grande\", \"Tahoma\", \"Verdana\", \"Arial\", sans-serif;\r\n\r\n/// Monospace font stack.\r\n///\r\n/// @type List\r\n\r\n$monospace: \"Bitstream Vera Sans Mono\", \"Consolas\", \"Courier\", monospace;\r\n\r\n/// Verdana font stack.\r\n///\r\n/// @type List\r\n\r\n$verdana: \"Verdana\", \"Geneva\", sans-serif;\r\n","/// Hides the text in an element, commonly used to show an image. Some elements will need block-level styles applied.\r\n///\r\n/// @link http://zeldman.com/2012/03/01/replacing-the-9999px-hack-new-image-replacement\r\n///\r\n/// @example scss - Usage\r\n///   .element {\r\n///     @include hide-text;\r\n///   }\r\n///\r\n/// @example css - CSS Output\r\n///   .element {\r\n///     overflow: hidden;\r\n///     text-indent: 101%;\r\n///     white-space: nowrap;\r\n///   }\r\n///\r\n/// @todo Remove height argument in v5.0.0\r\n\r\n@mixin hide-text($height: null) {\r\n  overflow: hidden;\r\n  text-indent: 101%;\r\n  white-space: nowrap;\r\n\r\n  @if $height {\r\n    @warn \"The `hide-text` mixin has changed and no longer requires a height. The height argument will no longer be accepted in v5.0.0\";\r\n  }\r\n}\r\n","@charset \"UTF-8\";\r\n\r\n/// Provides a quick method for targeting `margin` on specific sides of a box. Use a `null` value to “skip” a side.\r\n///\r\n/// @param {Arglist} $vals\r\n///   List of arguments\r\n///\r\n/// @example scss - Usage\r\n///   .element {\r\n///     @include margin(null 10px 3em 20vh);\r\n///   }\r\n///\r\n/// @example css - CSS Output\r\n///   .element {\r\n///     margin-bottom: 3em;\r\n///     margin-left: 20vh;\r\n///     margin-right: 10px;\r\n///   }\r\n///\r\n/// @require {mixin} directional-property\r\n///\r\n/// @output `margin`\r\n\r\n@mixin margin($vals...) {\r\n  @include directional-property(margin, false, $vals...);\r\n}\r\n","@charset \"UTF-8\";\r\n\r\n/// Provides a quick method for targeting `padding` on specific sides of a box. Use a `null` value to “skip” a side.\r\n///\r\n/// @param {Arglist} $vals\r\n///   List of arguments\r\n///\r\n/// @example scss - Usage\r\n///   .element {\r\n///     @include padding(12vh null 10px 5%);\r\n///   }\r\n///\r\n/// @example css - CSS Output\r\n///   .element {\r\n///     padding-bottom: 10px;\r\n///     padding-left: 5%;\r\n///     padding-top: 12vh;\r\n///   }\r\n///\r\n/// @require {mixin} directional-property\r\n///\r\n/// @output `padding`\r\n\r\n@mixin padding($vals...) {\r\n  @include directional-property(padding, false, $vals...);\r\n}\r\n","@charset \"UTF-8\";\r\n\r\n/// Provides a quick method for setting an element’s position. Use a `null` value to “skip” a side.\r\n///\r\n/// @param {Position} $position [relative]\r\n///   A CSS position value\r\n///\r\n/// @param {Arglist} $coordinates [null null null null]\r\n///   List of values that correspond to the 4-value syntax for the edges of a box\r\n///\r\n/// @example scss - Usage\r\n///   .element {\r\n///     @include position(absolute, 0 null null 10em);\r\n///   }\r\n///\r\n/// @example css - CSS Output\r\n///   .element {\r\n///     left: 10em;\r\n///     position: absolute;\r\n///     top: 0;\r\n///   }\r\n///\r\n/// @require {function} is-length\r\n/// @require {function} unpack\r\n\r\n@mixin position($position: relative, $coordinates: null null null null) {\r\n  @if type-of($position) == list {\r\n    $coordinates: $position;\r\n    $position: relative;\r\n  }\r\n\r\n  $coordinates: unpack($coordinates);\r\n\r\n  $offsets: (\r\n    top:    nth($coordinates, 1),\r\n    right:  nth($coordinates, 2),\r\n    bottom: nth($coordinates, 3),\r\n    left:   nth($coordinates, 4)\r\n  );\r\n\r\n  position: $position;\r\n\r\n  @each $offset, $value in $offsets {\r\n    @if is-length($value) {\r\n      #{$offset}: $value;\r\n    }\r\n  }\r\n}\r\n","@charset \"UTF-8\";\r\n\r\n/// A mixin for generating vendor prefixes on non-standardized properties.\r\n///\r\n/// @param {String} $property\r\n///   Property to prefix\r\n///\r\n/// @param {*} $value\r\n///   Value to use\r\n///\r\n/// @param {List} $prefixes\r\n///   Prefixes to define\r\n///\r\n/// @example scss - Usage\r\n///   .element {\r\n///     @include prefixer(border-radius, 10px, webkit ms spec);\r\n///   }\r\n///\r\n/// @example css - CSS Output\r\n///   .element {\r\n///     -webkit-border-radius: 10px;\r\n///     -moz-border-radius: 10px;\r\n///     border-radius: 10px;\r\n///   }\r\n///\r\n/// @require {variable} $prefix-for-webkit\r\n/// @require {variable} $prefix-for-mozilla\r\n/// @require {variable} $prefix-for-microsoft\r\n/// @require {variable} $prefix-for-opera\r\n/// @require {variable} $prefix-for-spec\r\n\r\n@mixin prefixer($property, $value, $prefixes) {\r\n  @each $prefix in $prefixes {\r\n    @if $prefix == webkit {\r\n      @if $prefix-for-webkit {\r\n        -webkit-#{$property}: $value;\r\n      }\r\n    } @else if $prefix == moz {\r\n      @if $prefix-for-mozilla {\r\n        -moz-#{$property}: $value;\r\n      }\r\n    } @else if $prefix == ms {\r\n      @if $prefix-for-microsoft {\r\n        -ms-#{$property}: $value;\r\n      }\r\n    } @else if $prefix == o {\r\n      @if $prefix-for-opera {\r\n        -o-#{$property}: $value;\r\n      }\r\n    } @else if $prefix == spec {\r\n      @if $prefix-for-spec {\r\n        #{$property}: $value;\r\n      }\r\n    } @else  {\r\n      @warn \"Unrecognized prefix: #{$prefix}\";\r\n    }\r\n  }\r\n}\r\n\r\n@mixin disable-prefix-for-all() {\r\n  $prefix-for-webkit:    false !global;\r\n  $prefix-for-mozilla:   false !global;\r\n  $prefix-for-microsoft: false !global;\r\n  $prefix-for-opera:     false !global;\r\n  $prefix-for-spec:      false !global;\r\n}\r\n","@mixin retina-image($filename, $background-size, $extension: png, $retina-filename: null, $retina-suffix: _2x, $asset-pipeline: $asset-pipeline) {\r\n  @if $asset-pipeline {\r\n    background-image: image-url(\"#{$filename}.#{$extension}\");\r\n  } @else {\r\n    background-image:       url(\"#{$filename}.#{$extension}\");\r\n  }\r\n\r\n  @include hidpi {\r\n    @if $asset-pipeline {\r\n      @if $retina-filename {\r\n        background-image: image-url(\"#{$retina-filename}.#{$extension}\");\r\n      } @else {\r\n        background-image: image-url(\"#{$filename}#{$retina-suffix}.#{$extension}\");\r\n      }\r\n    } @else {\r\n      @if $retina-filename {\r\n        background-image: url(\"#{$retina-filename}.#{$extension}\");\r\n      } @else {\r\n        background-image: url(\"#{$filename}#{$retina-suffix}.#{$extension}\");\r\n      }\r\n    }\r\n\r\n    background-size: $background-size;\r\n  }\r\n}\r\n","@charset \"UTF-8\";\r\n\r\n/// Sets the `width` and `height` of the element.\r\n///\r\n/// @param {List} $size\r\n///   A list of at most 2 size values.\r\n///\r\n///   If there is only a single value in `$size` it is used for both width and height. All units are supported.\r\n///\r\n/// @example scss - Usage\r\n///   .first-element {\r\n///     @include size(2em);\r\n///   }\r\n///\r\n///   .second-element {\r\n///     @include size(auto 10em);\r\n///   }\r\n///\r\n/// @example css - CSS Output\r\n///   .first-element {\r\n///     width: 2em;\r\n///     height: 2em;\r\n///   }\r\n///\r\n///   .second-element {\r\n///     width: auto;\r\n///     height: 10em;\r\n///   }\r\n///\r\n/// @todo Refactor in 5.0.0 to use a comma-separated argument\r\n\r\n@mixin size($value) {\r\n  $width: nth($value, 1);\r\n  $height: $width;\r\n\r\n  @if length($value) > 1 {\r\n    $height: nth($value, 2);\r\n  }\r\n\r\n  @if is-size($height) {\r\n    height: $height;\r\n  } @else {\r\n    @warn \"`#{$height}` is not a valid length for the `$height` parameter in the `size` mixin.\";\r\n  }\r\n\r\n  @if is-size($width) {\r\n    width: $width;\r\n  } @else {\r\n    @warn \"`#{$width}` is not a valid length for the `$width` parameter in the `size` mixin.\";\r\n  }\r\n}\r\n","@charset \"UTF-8\";\r\n\r\n/// Generates variables for all text-based inputs. Please note that you must use interpolation on the variable: `#{$all-text-inputs}`.\r\n///\r\n/// @example scss - Usage\r\n///   #{$all-text-inputs} {\r\n///     border: 1px solid #f00;\r\n///   }\r\n///\r\n///   #{$all-text-inputs-focus},\r\n///   #{$all-text-inputs-hover} {\r\n///     border: 1px solid #0f0;\r\n///   }\r\n///\r\n///   #{$all-text-inputs-active} {\r\n///     border: 1px solid #00f;\r\n///   }\r\n///\r\n/// @example css - CSS Output\r\n///   input[type=\"color\"],\r\n///   input[type=\"date\"],\r\n///   input[type=\"datetime\"],\r\n///   input[type=\"datetime-local\"],\r\n///   input[type=\"email\"],\r\n///   input[type=\"month\"],\r\n///   input[type=\"number\"],\r\n///   input[type=\"password\"],\r\n///   input[type=\"search\"],\r\n///   input[type=\"tel\"],\r\n///   input[type=\"text\"],\r\n///   input[type=\"time\"],\r\n///   input[type=\"url\"],\r\n///   input[type=\"week\"],\r\n///   textarea {\r\n///     border: 1px solid #f00;\r\n///   }\r\n///\r\n///   input[type=\"color\"]:focus,\r\n///   input[type=\"date\"]:focus,\r\n///   input[type=\"datetime\"]:focus,\r\n///   input[type=\"datetime-local\"]:focus,\r\n///   input[type=\"email\"]:focus,\r\n///   input[type=\"month\"]:focus,\r\n///   input[type=\"number\"]:focus,\r\n///   input[type=\"password\"]:focus,\r\n///   input[type=\"search\"]:focus,\r\n///   input[type=\"tel\"]:focus,\r\n///   input[type=\"text\"]:focus,\r\n///   input[type=\"time\"]:focus,\r\n///   input[type=\"url\"]:focus,\r\n///   input[type=\"week\"]:focus,\r\n///   textarea:focus,\r\n///   input[type=\"color\"]:hover,\r\n///   input[type=\"date\"]:hover,\r\n///   input[type=\"datetime\"]:hover,\r\n///   input[type=\"datetime-local\"]:hover,\r\n///   input[type=\"email\"]:hover,\r\n///   input[type=\"month\"]:hover,\r\n///   input[type=\"number\"]:hover,\r\n///   input[type=\"password\"]:hover,\r\n///   input[type=\"search\"]:hover,\r\n///   input[type=\"tel\"]:hover,\r\n///   input[type=\"text\"]:hover,\r\n///   input[type=\"time\"]:hover,\r\n///   input[type=\"url\"]:hover,\r\n///   input[type=\"week\"]:hover,\r\n///   textarea:hover {\r\n///     border: 1px solid #0f0;\r\n///   }\r\n///\r\n///   input[type=\"color\"]:active,\r\n///   input[type=\"date\"]:active,\r\n///   input[type=\"datetime\"]:active,\r\n///   input[type=\"datetime-local\"]:active,\r\n///   input[type=\"email\"]:active,\r\n///   input[type=\"month\"]:active,\r\n///   input[type=\"number\"]:active,\r\n///   input[type=\"password\"]:active,\r\n///   input[type=\"search\"]:active,\r\n///   input[type=\"tel\"]:active,\r\n///   input[type=\"text\"]:active,\r\n///   input[type=\"time\"]:active,\r\n///   input[type=\"url\"]:active,\r\n///   input[type=\"week\"]:active,\r\n///   textarea:active {\r\n///     border: 1px solid #00f;\r\n///   }\r\n///\r\n/// @require assign-inputs\r\n///\r\n/// @type List\r\n\r\n$text-inputs-list: 'input[type=\"color\"]',\r\n                   'input[type=\"date\"]',\r\n                   'input[type=\"datetime\"]',\r\n                   'input[type=\"datetime-local\"]',\r\n                   'input[type=\"email\"]',\r\n                   'input[type=\"month\"]',\r\n                   'input[type=\"number\"]',\r\n                   'input[type=\"password\"]',\r\n                   'input[type=\"search\"]',\r\n                   'input[type=\"tel\"]',\r\n                   'input[type=\"text\"]',\r\n                   'input[type=\"time\"]',\r\n                   'input[type=\"url\"]',\r\n                   'input[type=\"week\"]',\r\n                   'input:not([type])',\r\n                   'textarea';\r\n\r\n$all-text-inputs:        assign-inputs($text-inputs-list);\r\n$all-text-inputs-active: assign-inputs($text-inputs-list, active);\r\n$all-text-inputs-focus:  assign-inputs($text-inputs-list, focus);\r\n$all-text-inputs-hover:  assign-inputs($text-inputs-list, hover);\r\n","@charset \"UTF-8\";\r\n\r\n/// CSS cubic-bezier timing functions. Timing functions courtesy of jquery.easie (github.com/jaukia/easie)\r\n///\r\n/// Timing functions are the same as demoed here: http://jqueryui.com/resources/demos/effect/easing.html\r\n///\r\n/// @type cubic-bezier\r\n\r\n$ease-in-quad:      cubic-bezier(0.550,  0.085, 0.680, 0.530);\r\n$ease-in-cubic:     cubic-bezier(0.550,  0.055, 0.675, 0.190);\r\n$ease-in-quart:     cubic-bezier(0.895,  0.030, 0.685, 0.220);\r\n$ease-in-quint:     cubic-bezier(0.755,  0.050, 0.855, 0.060);\r\n$ease-in-sine:      cubic-bezier(0.470,  0.000, 0.745, 0.715);\r\n$ease-in-expo:      cubic-bezier(0.950,  0.050, 0.795, 0.035);\r\n$ease-in-circ:      cubic-bezier(0.600,  0.040, 0.980, 0.335);\r\n$ease-in-back:      cubic-bezier(0.600, -0.280, 0.735, 0.045);\r\n\r\n$ease-out-quad:     cubic-bezier(0.250,  0.460, 0.450, 0.940);\r\n$ease-out-cubic:    cubic-bezier(0.215,  0.610, 0.355, 1.000);\r\n$ease-out-quart:    cubic-bezier(0.165,  0.840, 0.440, 1.000);\r\n$ease-out-quint:    cubic-bezier(0.230,  1.000, 0.320, 1.000);\r\n$ease-out-sine:     cubic-bezier(0.390,  0.575, 0.565, 1.000);\r\n$ease-out-expo:     cubic-bezier(0.190,  1.000, 0.220, 1.000);\r\n$ease-out-circ:     cubic-bezier(0.075,  0.820, 0.165, 1.000);\r\n$ease-out-back:     cubic-bezier(0.175,  0.885, 0.320, 1.275);\r\n\r\n$ease-in-out-quad:  cubic-bezier(0.455,  0.030, 0.515, 0.955);\r\n$ease-in-out-cubic: cubic-bezier(0.645,  0.045, 0.355, 1.000);\r\n$ease-in-out-quart: cubic-bezier(0.770,  0.000, 0.175, 1.000);\r\n$ease-in-out-quint: cubic-bezier(0.860,  0.000, 0.070, 1.000);\r\n$ease-in-out-sine:  cubic-bezier(0.445,  0.050, 0.550, 0.950);\r\n$ease-in-out-expo:  cubic-bezier(1.000,  0.000, 0.000, 1.000);\r\n$ease-in-out-circ:  cubic-bezier(0.785,  0.135, 0.150, 0.860);\r\n$ease-in-out-back:  cubic-bezier(0.680, -0.550, 0.265, 1.550);\r\n","@mixin triangle($size, $color, $direction) {\r\n  $width: nth($size, 1);\r\n  $height: nth($size, length($size));\r\n  $foreground-color: nth($color, 1);\r\n  $background-color: if(length($color) == 2, nth($color, 2), transparent);\r\n  height: 0;\r\n  width: 0;\r\n\r\n  @if ($direction == up) or ($direction == down) or ($direction == right) or ($direction == left) {\r\n    $width: $width / 2;\r\n    $height: if(length($size) > 1, $height, $height/2);\r\n\r\n    @if $direction == up {\r\n      border-bottom: $height solid $foreground-color;\r\n      border-left: $width solid $background-color;\r\n      border-right: $width solid $background-color;\r\n    } @else if $direction == right {\r\n      border-bottom: $width solid $background-color;\r\n      border-left: $height solid $foreground-color;\r\n      border-top: $width solid $background-color;\r\n    } @else if $direction == down {\r\n      border-left: $width solid $background-color;\r\n      border-right: $width solid $background-color;\r\n      border-top: $height solid $foreground-color;\r\n    } @else if $direction == left {\r\n      border-bottom: $width solid $background-color;\r\n      border-right: $height solid $foreground-color;\r\n      border-top: $width solid $background-color;\r\n    }\r\n  } @else if ($direction == up-right) or ($direction == up-left) {\r\n    border-top: $height solid $foreground-color;\r\n\r\n    @if $direction == up-right {\r\n      border-left:  $width solid $background-color;\r\n    } @else if $direction == up-left {\r\n      border-right: $width solid $background-color;\r\n    }\r\n  } @else if ($direction == down-right) or ($direction == down-left) {\r\n    border-bottom: $height solid $foreground-color;\r\n\r\n    @if $direction == down-right {\r\n      border-left:  $width solid $background-color;\r\n    } @else if $direction == down-left {\r\n      border-right: $width solid $background-color;\r\n    }\r\n  } @else if ($direction == inset-up) {\r\n    border-color: $background-color $background-color $foreground-color;\r\n    border-style: solid;\r\n    border-width: $height $width;\r\n  } @else if ($direction == inset-down) {\r\n    border-color: $foreground-color $background-color $background-color;\r\n    border-style: solid;\r\n    border-width: $height $width;\r\n  } @else if ($direction == inset-right) {\r\n    border-color: $background-color $background-color $background-color $foreground-color;\r\n    border-style: solid;\r\n    border-width: $width $height;\r\n  } @else if ($direction == inset-left) {\r\n    border-color: $background-color $foreground-color $background-color $background-color;\r\n    border-style: solid;\r\n    border-width: $width $height;\r\n  }\r\n}\r\n","@charset \"UTF-8\";\r\n\r\n/// Provides an easy way to change the `word-wrap` property.\r\n///\r\n/// @param {String} $wrap [break-word]\r\n///   Value for the `word-break` property.\r\n///\r\n/// @example scss - Usage\r\n///   .wrapper {\r\n///     @include word-wrap(break-word);\r\n///   }\r\n///\r\n/// @example css - CSS Output\r\n///   .wrapper {\r\n///     overflow-wrap: break-word;\r\n///     word-break: break-all;\r\n///     word-wrap: break-word;\r\n///   }\r\n\r\n@mixin word-wrap($wrap: break-word) {\r\n  overflow-wrap: $wrap;\r\n  word-wrap: $wrap;\r\n\r\n  @if $wrap == break-word {\r\n    word-break: break-all;\r\n  } @else {\r\n    word-break: $wrap;\r\n  }\r\n}\r\n","// The following features have been deprecated and will be removed in the next MAJOR version release\r\n\r\n@mixin inline-block {\r\n  display: inline-block;\r\n\r\n  @warn \"The inline-block mixin is deprecated and will be removed in the next major version release\";\r\n}\r\n\r\n@mixin button ($style: simple, $base-color: #4294f0, $text-size: inherit, $padding: 7px 18px) {\r\n\r\n  @if type-of($style) == string and type-of($base-color) == color {\r\n    @include buttonstyle($style, $base-color, $text-size, $padding);\r\n  }\r\n\r\n  @if type-of($style) == string and type-of($base-color) == number {\r\n    $padding: $text-size;\r\n    $text-size: $base-color;\r\n    $base-color: #4294f0;\r\n\r\n    @if $padding == inherit {\r\n      $padding: 7px 18px;\r\n    }\r\n\r\n    @include buttonstyle($style, $base-color, $text-size, $padding);\r\n  }\r\n\r\n  @if type-of($style) == color and type-of($base-color) == color {\r\n    $base-color: $style;\r\n    $style: simple;\r\n    @include buttonstyle($style, $base-color, $text-size, $padding);\r\n  }\r\n\r\n  @if type-of($style) == color and type-of($base-color) == number {\r\n    $padding: $text-size;\r\n    $text-size: $base-color;\r\n    $base-color: $style;\r\n    $style: simple;\r\n\r\n    @if $padding == inherit {\r\n      $padding: 7px 18px;\r\n    }\r\n\r\n    @include buttonstyle($style, $base-color, $text-size, $padding);\r\n  }\r\n\r\n  @if type-of($style) == number {\r\n    $padding: $base-color;\r\n    $text-size: $style;\r\n    $base-color: #4294f0;\r\n    $style: simple;\r\n\r\n    @if $padding == #4294f0 {\r\n      $padding: 7px 18px;\r\n    }\r\n\r\n    @include buttonstyle($style, $base-color, $text-size, $padding);\r\n  }\r\n\r\n  &:disabled {\r\n    cursor: not-allowed;\r\n    opacity: 0.5;\r\n  }\r\n\r\n  @warn \"The button mixin is deprecated and will be removed in the next major version release\";\r\n}\r\n\r\n// Selector Style Button\r\n@mixin buttonstyle($type, $b-color, $t-size, $pad) {\r\n  // Grayscale button\r\n  @if $type == simple and $b-color == grayscale($b-color) {\r\n    @include simple($b-color, true, $t-size, $pad);\r\n  }\r\n\r\n  @if $type == shiny and $b-color == grayscale($b-color) {\r\n    @include shiny($b-color, true, $t-size, $pad);\r\n  }\r\n\r\n  @if $type == pill and $b-color == grayscale($b-color) {\r\n    @include pill($b-color, true, $t-size, $pad);\r\n  }\r\n\r\n  @if $type == flat and $b-color == grayscale($b-color) {\r\n    @include flat($b-color, true, $t-size, $pad);\r\n  }\r\n\r\n  // Colored button\r\n  @if $type == simple {\r\n    @include simple($b-color, false, $t-size, $pad);\r\n  }\r\n\r\n  @else if $type == shiny {\r\n    @include shiny($b-color, false, $t-size, $pad);\r\n  }\r\n\r\n  @else if $type == pill {\r\n    @include pill($b-color, false, $t-size, $pad);\r\n  }\r\n\r\n  @else if $type == flat {\r\n    @include flat($b-color, false, $t-size, $pad);\r\n  }\r\n}\r\n\r\n// Simple Button\r\n@mixin simple($base-color, $grayscale: false, $textsize: inherit, $padding: 7px 18px) {\r\n  $color:         hsl(0, 0, 100%);\r\n  $border:        adjust-color($base-color, $saturation:  9%,  $lightness: -14%);\r\n  $inset-shadow:  adjust-color($base-color, $saturation: -8%,  $lightness:  15%);\r\n  $stop-gradient: adjust-color($base-color, $saturation:  9%,  $lightness: -11%);\r\n  $text-shadow:   adjust-color($base-color, $saturation:  15%, $lightness: -18%);\r\n\r\n  @if is-light($base-color) {\r\n    $color:       hsl(0, 0, 20%);\r\n    $text-shadow: adjust-color($base-color, $saturation: 10%, $lightness: 4%);\r\n  }\r\n\r\n  @if $grayscale == true {\r\n    $border:        grayscale($border);\r\n    $inset-shadow:  grayscale($inset-shadow);\r\n    $stop-gradient: grayscale($stop-gradient);\r\n    $text-shadow:   grayscale($text-shadow);\r\n  }\r\n\r\n  border: 1px solid $border;\r\n  border-radius: 3px;\r\n  box-shadow: inset 0 1px 0 0 $inset-shadow;\r\n  color: $color;\r\n  display: inline-block;\r\n  font-size: $textsize;\r\n  font-weight: bold;\r\n  @include linear-gradient ($base-color, $stop-gradient);\r\n  padding: $padding;\r\n  text-decoration: none;\r\n  text-shadow: 0 1px 0 $text-shadow;\r\n  background-clip: padding-box;\r\n\r\n  &:hover:not(:disabled) {\r\n    $base-color-hover:    adjust-color($base-color, $saturation: -4%, $lightness: -5%);\r\n    $inset-shadow-hover:  adjust-color($base-color, $saturation: -7%, $lightness:  5%);\r\n    $stop-gradient-hover: adjust-color($base-color, $saturation:  8%, $lightness: -14%);\r\n\r\n    @if $grayscale == true {\r\n      $base-color-hover:    grayscale($base-color-hover);\r\n      $inset-shadow-hover:  grayscale($inset-shadow-hover);\r\n      $stop-gradient-hover: grayscale($stop-gradient-hover);\r\n    }\r\n\r\n    @include linear-gradient ($base-color-hover, $stop-gradient-hover);\r\n\r\n    box-shadow: inset 0 1px 0 0 $inset-shadow-hover;\r\n    cursor: pointer;\r\n  }\r\n\r\n  &:active:not(:disabled),\r\n  &:focus:not(:disabled) {\r\n    $border-active:       adjust-color($base-color, $saturation: 9%, $lightness: -14%);\r\n    $inset-shadow-active: adjust-color($base-color, $saturation: 7%, $lightness: -17%);\r\n\r\n    @if $grayscale == true {\r\n      $border-active:       grayscale($border-active);\r\n      $inset-shadow-active: grayscale($inset-shadow-active);\r\n    }\r\n\r\n    border: 1px solid $border-active;\r\n    box-shadow: inset 0 0 8px 4px $inset-shadow-active, inset 0 0 8px 4px $inset-shadow-active;\r\n  }\r\n}\r\n\r\n// Shiny Button\r\n@mixin shiny($base-color, $grayscale: false, $textsize: inherit, $padding: 7px 18px) {\r\n  $color:         hsl(0, 0, 100%);\r\n  $border:        adjust-color($base-color, $red: -117, $green: -111, $blue: -81);\r\n  $border-bottom: adjust-color($base-color, $red: -126, $green: -127, $blue: -122);\r\n  $fourth-stop:   adjust-color($base-color, $red: -79,  $green: -70,  $blue: -46);\r\n  $inset-shadow:  adjust-color($base-color, $red:  37,  $green:  29,  $blue:  12);\r\n  $second-stop:   adjust-color($base-color, $red: -56,  $green: -50,  $blue: -33);\r\n  $text-shadow:   adjust-color($base-color, $red: -140, $green: -141, $blue: -114);\r\n  $third-stop:    adjust-color($base-color, $red: -86,  $green: -75,  $blue: -48);\r\n\r\n  @if is-light($base-color) {\r\n    $color:       hsl(0, 0, 20%);\r\n    $text-shadow: adjust-color($base-color, $saturation: 10%, $lightness: 4%);\r\n  }\r\n\r\n  @if $grayscale == true {\r\n    $border:        grayscale($border);\r\n    $border-bottom: grayscale($border-bottom);\r\n    $fourth-stop:   grayscale($fourth-stop);\r\n    $inset-shadow:  grayscale($inset-shadow);\r\n    $second-stop:   grayscale($second-stop);\r\n    $text-shadow:   grayscale($text-shadow);\r\n    $third-stop:    grayscale($third-stop);\r\n  }\r\n\r\n  @include linear-gradient(top, $base-color 0%, $second-stop 50%, $third-stop 50%, $fourth-stop 100%);\r\n\r\n  border: 1px solid $border;\r\n  border-bottom: 1px solid $border-bottom;\r\n  border-radius: 5px;\r\n  box-shadow: inset 0 1px 0 0 $inset-shadow;\r\n  color: $color;\r\n  display: inline-block;\r\n  font-size: $textsize;\r\n  font-weight: bold;\r\n  padding: $padding;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  text-shadow: 0 -1px 1px $text-shadow;\r\n\r\n  &:hover:not(:disabled) {\r\n    $first-stop-hover:  adjust-color($base-color, $red: -13, $green: -15, $blue: -18);\r\n    $second-stop-hover: adjust-color($base-color, $red: -66, $green: -62, $blue: -51);\r\n    $third-stop-hover:  adjust-color($base-color, $red: -93, $green: -85, $blue: -66);\r\n    $fourth-stop-hover: adjust-color($base-color, $red: -86, $green: -80, $blue: -63);\r\n\r\n    @if $grayscale == true {\r\n      $first-stop-hover:  grayscale($first-stop-hover);\r\n      $second-stop-hover: grayscale($second-stop-hover);\r\n      $third-stop-hover:  grayscale($third-stop-hover);\r\n      $fourth-stop-hover: grayscale($fourth-stop-hover);\r\n    }\r\n\r\n    @include linear-gradient(top, $first-stop-hover  0%,\r\n                                  $second-stop-hover 50%,\r\n                                  $third-stop-hover  50%,\r\n                                  $fourth-stop-hover 100%);\r\n    cursor: pointer;\r\n  }\r\n\r\n  &:active:not(:disabled),\r\n  &:focus:not(:disabled) {\r\n    $inset-shadow-active: adjust-color($base-color, $red: -111, $green: -116, $blue: -122);\r\n\r\n    @if $grayscale == true {\r\n      $inset-shadow-active: grayscale($inset-shadow-active);\r\n    }\r\n\r\n    box-shadow: inset 0 0 20px 0 $inset-shadow-active;\r\n  }\r\n}\r\n\r\n// Pill Button\r\n@mixin pill($base-color, $grayscale: false, $textsize: inherit, $padding: 7px 18px) {\r\n  $color:         hsl(0, 0, 100%);\r\n  $border-bottom: adjust-color($base-color, $hue:  8, $saturation: -11%, $lightness: -26%);\r\n  $border-sides:  adjust-color($base-color, $hue:  4, $saturation: -21%, $lightness: -21%);\r\n  $border-top:    adjust-color($base-color, $hue: -1, $saturation: -30%, $lightness: -15%);\r\n  $inset-shadow:  adjust-color($base-color, $hue: -1, $saturation: -1%,  $lightness:  7%);\r\n  $stop-gradient: adjust-color($base-color, $hue:  8, $saturation:  14%, $lightness: -10%);\r\n  $text-shadow:   adjust-color($base-color, $hue:  5, $saturation: -19%, $lightness: -15%);\r\n\r\n  @if is-light($base-color) {\r\n    $color:       hsl(0, 0, 20%);\r\n    $text-shadow: adjust-color($base-color, $saturation: 10%, $lightness: 4%);\r\n  }\r\n\r\n  @if $grayscale == true {\r\n    $border-bottom: grayscale($border-bottom);\r\n    $border-sides:  grayscale($border-sides);\r\n    $border-top:    grayscale($border-top);\r\n    $inset-shadow:  grayscale($inset-shadow);\r\n    $stop-gradient: grayscale($stop-gradient);\r\n    $text-shadow:   grayscale($text-shadow);\r\n  }\r\n\r\n  border: 1px solid $border-top;\r\n  border-color: $border-top $border-sides $border-bottom;\r\n  border-radius: 16px;\r\n  box-shadow: inset 0 1px 0 0 $inset-shadow;\r\n  color: $color;\r\n  display: inline-block;\r\n  font-size: $textsize;\r\n  font-weight: normal;\r\n  line-height: 1;\r\n  @include linear-gradient ($base-color, $stop-gradient);\r\n  padding: $padding;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  text-shadow: 0 -1px 1px $text-shadow;\r\n  background-clip: padding-box;\r\n\r\n  &:hover:not(:disabled) {\r\n    $base-color-hover:    adjust-color($base-color,                                $lightness: -4.5%);\r\n    $border-bottom:       adjust-color($base-color, $hue:  8, $saturation:  13.5%, $lightness: -32%);\r\n    $border-sides:        adjust-color($base-color, $hue:  4, $saturation: -2%,    $lightness: -27%);\r\n    $border-top:          adjust-color($base-color, $hue: -1, $saturation: -17%,   $lightness: -21%);\r\n    $inset-shadow-hover:  adjust-color($base-color,           $saturation: -1%,    $lightness:  3%);\r\n    $stop-gradient-hover: adjust-color($base-color, $hue:  8, $saturation: -4%,    $lightness: -15.5%);\r\n    $text-shadow-hover:   adjust-color($base-color, $hue:  5, $saturation: -5%,    $lightness: -22%);\r\n\r\n    @if $grayscale == true {\r\n      $base-color-hover:    grayscale($base-color-hover);\r\n      $border-bottom:       grayscale($border-bottom);\r\n      $border-sides:        grayscale($border-sides);\r\n      $border-top:          grayscale($border-top);\r\n      $inset-shadow-hover:  grayscale($inset-shadow-hover);\r\n      $stop-gradient-hover: grayscale($stop-gradient-hover);\r\n      $text-shadow-hover:   grayscale($text-shadow-hover);\r\n    }\r\n\r\n    @include linear-gradient ($base-color-hover, $stop-gradient-hover);\r\n\r\n    background-clip: padding-box;\r\n    border: 1px solid $border-top;\r\n    border-color: $border-top $border-sides $border-bottom;\r\n    box-shadow: inset 0 1px 0 0 $inset-shadow-hover;\r\n    cursor: pointer;\r\n    text-shadow: 0 -1px 1px $text-shadow-hover;\r\n  }\r\n\r\n  &:active:not(:disabled),\r\n  &:focus:not(:disabled) {\r\n    $active-color:         adjust-color($base-color, $hue: 4,  $saturation: -12%,  $lightness: -10%);\r\n    $border-active:        adjust-color($base-color, $hue: 6,  $saturation: -2.5%, $lightness: -30%);\r\n    $border-bottom-active: adjust-color($base-color, $hue: 11, $saturation:  6%,   $lightness: -31%);\r\n    $inset-shadow-active:  adjust-color($base-color, $hue: 9,  $saturation:  2%,   $lightness: -21.5%);\r\n    $text-shadow-active:   adjust-color($base-color, $hue: 5,  $saturation: -12%,  $lightness: -21.5%);\r\n\r\n    @if $grayscale == true {\r\n      $active-color:         grayscale($active-color);\r\n      $border-active:        grayscale($border-active);\r\n      $border-bottom-active: grayscale($border-bottom-active);\r\n      $inset-shadow-active:  grayscale($inset-shadow-active);\r\n      $text-shadow-active:   grayscale($text-shadow-active);\r\n    }\r\n\r\n    background: $active-color;\r\n    border: 1px solid $border-active;\r\n    border-bottom: 1px solid $border-bottom-active;\r\n    box-shadow: inset 0 0 6px 3px $inset-shadow-active;\r\n    text-shadow: 0 -1px 1px $text-shadow-active;\r\n  }\r\n}\r\n\r\n// Flat Button\r\n@mixin flat($base-color, $grayscale: false, $textsize: inherit, $padding: 7px 18px) {\r\n  $color:         hsl(0, 0, 100%);\r\n\r\n  @if is-light($base-color) {\r\n    $color:       hsl(0, 0, 20%);\r\n  }\r\n\r\n  background-color: $base-color;\r\n  border-radius: 3px;\r\n  border: 0;\r\n  color: $color;\r\n  display: inline-block;\r\n  font-size: $textsize;\r\n  font-weight: bold;\r\n  padding: $padding;\r\n  text-decoration: none;\r\n  background-clip: padding-box;\r\n\r\n  &:hover:not(:disabled){\r\n    $base-color-hover:    adjust-color($base-color, $saturation: 4%, $lightness: 5%);\r\n\r\n    @if $grayscale == true {\r\n      $base-color-hover: grayscale($base-color-hover);\r\n    }\r\n\r\n    background-color: $base-color-hover;\r\n    cursor: pointer;\r\n  }\r\n\r\n  &:active:not(:disabled),\r\n  &:focus:not(:disabled) {\r\n    $base-color-active: adjust-color($base-color, $saturation: -4%, $lightness: -5%);\r\n\r\n    @if $grayscale == true {\r\n      $base-color-active: grayscale($base-color-active);\r\n    }\r\n\r\n    background-color: $base-color-active;\r\n    cursor: pointer;\r\n  }\r\n}\r\n\r\n// Flexible grid\r\n@function flex-grid($columns, $container-columns: $fg-max-columns) {\r\n  $width: $columns * $fg-column + ($columns - 1) * $fg-gutter;\r\n  $container-width: $container-columns * $fg-column + ($container-columns - 1) * $fg-gutter;\r\n  @return percentage($width / $container-width);\r\n\r\n  @warn \"The flex-grid function is deprecated and will be removed in the next major version release\";\r\n}\r\n\r\n// Flexible gutter\r\n@function flex-gutter($container-columns: $fg-max-columns, $gutter: $fg-gutter) {\r\n  $container-width: $container-columns * $fg-column + ($container-columns - 1) * $fg-gutter;\r\n  @return percentage($gutter / $container-width);\r\n\r\n  @warn \"The flex-gutter function is deprecated and will be removed in the next major version release\";\r\n}\r\n\r\n@function grid-width($n) {\r\n  @return $n * $gw-column + ($n - 1) * $gw-gutter;\r\n\r\n  @warn \"The grid-width function is deprecated and will be removed in the next major version release\";\r\n}\r\n\r\n@function golden-ratio($value, $increment) {\r\n  @return modular-scale($increment, $value, $ratio: $golden);\r\n\r\n  @warn \"The golden-ratio function is deprecated and will be removed in the next major version release. Please use the modular-scale function, instead.\";\r\n}\r\n\r\n@mixin box-sizing($box) {\r\n  @include prefixer(box-sizing, $box, webkit moz spec);\r\n\r\n  @warn \"The box-sizing mixin is deprecated and will be removed in the next major version release. This property can now be used un-prefixed.\";\r\n}\r\n","/*! normalize.css v3.0.1 | MIT License | git.io/normalize */\r\n\r\n/**\r\n * 1. Set default font family to sans-serif.\r\n * 2. Prevent iOS text size adjust after orientation change, without disabling\r\n *    user zoom.\r\n */\r\n\r\nhtml {\r\n\tfont-family: sans-serif; /* 1 */\r\n\t-ms-text-size-adjust: 100%; /* 2 */\r\n\t-webkit-text-size-adjust: 100%; /* 2 */\r\n}\r\n\r\n/**\r\n * Remove default margin.\r\n */\r\n\r\nbody {\r\n\tmargin: 0;\r\n}\r\n\r\n/* HTML5 display definitions\r\n\t ========================================================================== */\r\n\r\n/**\r\n * Correct `block` display not defined for any HTML5 element in IE 8/9.\r\n * Correct `block` display not defined for `details` or `summary` in IE 10/11 and Firefox.\r\n * Correct `block` display not defined for `main` in IE 11.\r\n */\r\n\r\narticle,\r\naside,\r\ndetails,\r\nfigcaption,\r\nfigure,\r\nfooter,\r\nheader,\r\nhgroup,\r\nmain,\r\nnav,\r\nsection,\r\nsummary {\r\n\tdisplay: block;\r\n}\r\n\r\n/**\r\n * 1. Correct `inline-block` display not defined in IE 8/9.\r\n * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.\r\n */\r\n\r\naudio,\r\ncanvas,\r\nprogress,\r\nvideo {\r\n\tdisplay: inline-block; /* 1 */\r\n\tvertical-align: baseline; /* 2 */\r\n}\r\n\r\n/**\r\n * Prevent modern browsers from displaying `audio` without controls.\r\n * Remove excess height in iOS 5 devices.\r\n */\r\n\r\naudio:not([controls]) {\r\n\tdisplay: none;\r\n\theight: 0;\r\n}\r\n\r\n/**\r\n * Address `[hidden]` styling not present in IE 8/9/10.\r\n * Hide the `template` element in IE 8/9/11, Safari, and Firefox < 22.\r\n */\r\n\r\n[hidden],\r\ntemplate {\r\n\tdisplay: none;\r\n}\r\n\r\n/* Links\r\n\t ========================================================================== */\r\n\r\n/**\r\n * Remove the gray background color from active links in IE 10.\r\n */\r\n\r\na {\r\n\tbackground: transparent;\r\n}\r\n\r\n/**\r\n * Improve readability when focused and also mouse hovered in all browsers.\r\n */\r\n\r\na:active,\r\na:hover {\r\n\toutline: 0;\r\n}\r\n\r\n/* Text-level semantics\r\n\t ========================================================================== */\r\n\r\n/**\r\n * Address styling not present in IE 8/9/10/11, Safari, and Chrome.\r\n */\r\n\r\nabbr[title] {\r\n\tborder-bottom: 1px dotted;\r\n}\r\n\r\n/**\r\n * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.\r\n */\r\n\r\nb,\r\nstrong {\r\n\tfont-weight: bold;\r\n}\r\n\r\n/**\r\n * Address styling not present in Safari and Chrome.\r\n */\r\n\r\ndfn {\r\n\tfont-style: italic;\r\n}\r\n\r\n/**\r\n * Address variable `h1` font-size and margin within `section` and `article`\r\n * contexts in Firefox 4+, Safari, and Chrome.\r\n */\r\n\r\nh1 {\r\n\tfont-size: 2em;\r\n\tmargin: 0.67em 0;\r\n}\r\n\r\n/**\r\n * Address styling not present in IE 8/9.\r\n */\r\n\r\nmark {\r\n\tbackground: #ff0;\r\n\tcolor: #000;\r\n}\r\n\r\n/**\r\n * Address inconsistent and variable font size in all browsers.\r\n */\r\n\r\nsmall {\r\n\tfont-size: 80%;\r\n}\r\n\r\n/**\r\n * Prevent `sub` and `sup` affecting `line-height` in all browsers.\r\n */\r\n\r\nsub,\r\nsup {\r\n\tfont-size: 75%;\r\n\tline-height: 0;\r\n\tposition: relative;\r\n\tvertical-align: baseline;\r\n}\r\n\r\nsup {\r\n\ttop: -0.5em;\r\n}\r\n\r\nsub {\r\n\tbottom: -0.25em;\r\n}\r\n\r\n/* Embedded content\r\n\t ========================================================================== */\r\n\r\n/**\r\n * Remove border when inside `a` element in IE 8/9/10.\r\n */\r\n\r\nimg {\r\n\tborder: 0;\r\n}\r\n\r\n/**\r\n * Correct overflow not hidden in IE 9/10/11.\r\n */\r\n\r\nsvg:not(:root) {\r\n\toverflow: hidden;\r\n}\r\n\r\n/* Grouping content\r\n\t ========================================================================== */\r\n\r\n/**\r\n * Address margin not present in IE 8/9 and Safari.\r\n */\r\n\r\nfigure {\r\n\tmargin: 1em 40px;\r\n}\r\n\r\n/**\r\n * Address differences between Firefox and other browsers.\r\n */\r\n\r\nhr {\r\n\t-moz-box-sizing: content-box;\r\n\tbox-sizing: content-box;\r\n\theight: 0;\r\n}\r\n\r\n/**\r\n * Contain overflow in all browsers.\r\n */\r\n\r\npre {\r\n\toverflow: auto;\r\n}\r\n\r\n/**\r\n * Address odd `em`-unit font size rendering in all browsers.\r\n */\r\n\r\ncode,\r\nkbd,\r\npre,\r\nsamp {\r\n\tfont-family: monospace, monospace;\r\n\tfont-size: 1em;\r\n}\r\n\r\n/* Forms\r\n\t ========================================================================== */\r\n\r\n/**\r\n * Known limitation: by default, Chrome and Safari on OS X allow very limited\r\n * styling of `select`, unless a `border` property is set.\r\n */\r\n\r\n/**\r\n * 1. Correct color not being inherited.\r\n *    Known issue: affects color of disabled elements.\r\n * 2. Correct font properties not being inherited.\r\n * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.\r\n */\r\n\r\nbutton,\r\ninput,\r\noptgroup,\r\nselect,\r\ntextarea {\r\n\tcolor: inherit; /* 1 */\r\n\tfont: inherit; /* 2 */\r\n\tmargin: 0; /* 3 */\r\n}\r\n\r\n/**\r\n * Address `overflow` set to `hidden` in IE 8/9/10/11.\r\n */\r\n\r\nbutton {\r\n\toverflow: visible;\r\n}\r\n\r\n/**\r\n * Address inconsistent `text-transform` inheritance for `button` and `select`.\r\n * All other form control elements do not inherit `text-transform` values.\r\n * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.\r\n * Correct `select` style inheritance in Firefox.\r\n */\r\n\r\nbutton,\r\nselect {\r\n\ttext-transform: none;\r\n}\r\n\r\n/**\r\n * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`\r\n *    and `video` controls.\r\n * 2. Correct inability to style clickable `input` types in iOS.\r\n * 3. Improve usability and consistency of cursor style between image-type\r\n *    `input` and others.\r\n */\r\n\r\nbutton,\r\nhtml input[type=\"button\"], /* 1 */\r\ninput[type=\"reset\"],\r\ninput[type=\"submit\"] {\r\n\t-webkit-appearance: button; /* 2 */\r\n\tcursor: pointer; /* 3 */\r\n}\r\n\r\n/**\r\n * Re-set default cursor for disabled elements.\r\n */\r\n\r\nbutton[disabled],\r\nhtml input[disabled] {\r\n\tcursor: default;\r\n}\r\n\r\n/**\r\n * Remove inner padding and border in Firefox 4+.\r\n */\r\n\r\nbutton::-moz-focus-inner,\r\ninput::-moz-focus-inner {\r\n\tborder: 0;\r\n\tpadding: 0;\r\n}\r\n\r\n/**\r\n * Address Firefox 4+ setting `line-height` on `input` using `!important` in\r\n * the UA stylesheet.\r\n */\r\n\r\ninput {\r\n\tline-height: normal;\r\n}\r\n\r\n/**\r\n * It's recommended that you don't attempt to style these elements.\r\n * Firefox's implementation doesn't respect box-sizing, padding, or width.\r\n *\r\n * 1. Address box sizing set to `content-box` in IE 8/9/10.\r\n * 2. Remove excess padding in IE 8/9/10.\r\n */\r\n\r\ninput[type=\"checkbox\"],\r\ninput[type=\"radio\"] {\r\n\tbox-sizing: border-box; /* 1 */\r\n\tpadding: 0; /* 2 */\r\n}\r\n\r\n/**\r\n * Fix the cursor style for Chrome's increment/decrement buttons. For certain\r\n * `font-size` values of the `input`, it causes the cursor style of the\r\n * decrement button to change from `default` to `text`.\r\n */\r\n\r\ninput[type=\"number\"]::-webkit-inner-spin-button,\r\ninput[type=\"number\"]::-webkit-outer-spin-button {\r\n\theight: auto;\r\n}\r\n\r\n/**\r\n * 1. Address `appearance` set to `searchfield` in Safari and Chrome.\r\n * 2. Address `box-sizing` set to `border-box` in Safari and Chrome\r\n *    (include `-moz` to future-proof).\r\n */\r\n\r\ninput[type=\"search\"] {\r\n\t-webkit-appearance: textfield; /* 1 */\r\n\t-moz-box-sizing: content-box;\r\n\t-webkit-box-sizing: content-box; /* 2 */\r\n\tbox-sizing: content-box;\r\n}\r\n\r\n/**\r\n * Remove inner padding and search cancel button in Safari and Chrome on OS X.\r\n * Safari (but not Chrome) clips the cancel button when the search input has\r\n * padding (and `textfield` appearance).\r\n */\r\n\r\ninput[type=\"search\"]::-webkit-search-cancel-button,\r\ninput[type=\"search\"]::-webkit-search-decoration {\r\n\t-webkit-appearance: none;\r\n}\r\n\r\n/**\r\n * Define consistent border, margin, and padding.\r\n */\r\n\r\nfieldset {\r\n\tborder: 1px solid #c0c0c0;\r\n\tmargin: 0 2px;\r\n\tpadding: 0.35em 0.625em 0.75em;\r\n}\r\n\r\n/**\r\n * 1. Correct `color` not being inherited in IE 8/9/10/11.\r\n * 2. Remove padding so people aren't caught out if they zero out fieldsets.\r\n */\r\n\r\nlegend {\r\n\tborder: 0; /* 1 */\r\n\tpadding: 0; /* 2 */\r\n}\r\n\r\n/**\r\n * Remove default vertical scrollbar in IE 8/9/10/11.\r\n */\r\n\r\ntextarea {\r\n\toverflow: auto;\r\n}\r\n\r\n/**\r\n * Don't inherit the `font-weight` (applied by a rule above).\r\n * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.\r\n */\r\n\r\noptgroup {\r\n\tfont-weight: bold;\r\n}\r\n\r\n/* Tables\r\n\t ========================================================================== */\r\n\r\n/**\r\n * Remove most spacing between table cells.\r\n */\r\n\r\ntable {\r\n\tborder-collapse: collapse;\r\n\tborder-spacing: 0;\r\n}\r\n\r\ntd,\r\nth {\r\n\tpadding: 0;\r\n}\r\n","/* Slider */\r\n.slick-slider\r\n{\r\n\tposition: relative;\r\n\r\n\tdisplay: block;\r\n\r\n\t-moz-box-sizing: border-box;\r\n\t\t box-sizing: border-box;\r\n\r\n\t-webkit-user-select: none;\r\n\t   -moz-user-select: none;\r\n\t\t-ms-user-select: none;\r\n\t\t\tuser-select: none;\r\n\r\n\t-webkit-touch-callout: none;\r\n\t-khtml-user-select: none;\r\n\t-ms-touch-action: pan-y;\r\n\t\ttouch-action: pan-y;\r\n\t-webkit-tap-highlight-color: transparent;\r\n}\r\n\r\n.slick-list\r\n{\r\n\tposition: relative;\r\n\tdisplay: block;\r\n\toverflow: hidden;\r\n\r\n\tmargin: 0;\r\n\tpadding: 0;\r\n}\r\n.slick-list:focus\r\n{\r\n\toutline: none;\r\n}\r\n.slick-list.dragging\r\n{\r\n\tcursor: pointer;\r\n\tcursor: hand;\r\n}\r\n\r\n.slick-slider .slick-track,\r\n.slick-slider .slick-list\r\n{\r\n\t-webkit-transform: translate3d(0, 0, 0);\r\n\t   -moz-transform: translate3d(0, 0, 0);\r\n\t\t-ms-transform: translate3d(0, 0, 0);\r\n\t\t -o-transform: translate3d(0, 0, 0);\r\n\t\t\ttransform: translate3d(0, 0, 0);\r\n}\r\n\r\n.slick-track\r\n{\r\n\tposition: relative;\r\n\ttop: 0;\r\n\tleft: 0;\r\n\r\n\tdisplay: block;\r\n}\r\n.slick-track:before,\r\n.slick-track:after\r\n{\r\n\tdisplay: table;\r\n\r\n\tcontent: '';\r\n}\r\n.slick-track:after\r\n{\r\n\tclear: both;\r\n}\r\n.slick-loading .slick-track\r\n{\r\n\tvisibility: hidden;\r\n}\r\n\r\n.slick-slide\r\n{\r\n\tdisplay: none;\r\n\tfloat: left;\r\n\r\n\theight: 100%;\r\n\tmin-height: 1px;\r\n}\r\n[dir='rtl'] .slick-slide\r\n{\r\n\tfloat: right;\r\n}\r\n.slick-slide img\r\n{\r\n\tdisplay: block;\r\n}\r\n.slick-slide.slick-loading img\r\n{\r\n\tdisplay: none;\r\n}\r\n.slick-slide.dragging img\r\n{\r\n\tpointer-events: none;\r\n}\r\n.slick-initialized .slick-slide\r\n{\r\n\tdisplay: block;\r\n}\r\n.slick-loading .slick-slide\r\n{\r\n\tvisibility: hidden;\r\n}\r\n.slick-vertical .slick-slide\r\n{\r\n\tdisplay: block;\r\n\r\n\theight: auto;\r\n\r\n\tborder: 1px solid transparent;\r\n}\r\n","/* ==========================================================================\r\nVARS\r\n========================================================================== */\r\n\r\n// media query breakpoints\r\n$tablet: 1080px;\r\n$desktop: $tablet + 1;\r\n$tabletLandscape: 1120px;\r\n$phone: 700px;\r\n$respHeader: 1024px;\r\n$respPromo: 820px;\r\n$resp980: 980px;\r\n$resp940: 940px;\r\n$resp880: 880px;\r\n$resp600: 600px;\r\n\r\n\r\n// global dimensions\r\n$padding: 40px;\r\n\r\n// global colors\r\n$exampleColor: #3d3524;\r\n\r\n// animation\r\n$noanimation: 0s;\r\n$transitionSpeed: 0.25s;\r\n$menuSpeed: 0.4s;\r\n$delay: 1s;\r\n","/* ==========================================================================\r\n\t\tFONTS\r\n\t ========================================================================== */\r\n@font-face {\r\n  font-family: 'League-gothic';\r\n  src: url('/assets/fonts/league-gothic/leaguegothic-regular-webfont.eot'); /* IE9 Compat Modes */\r\n  src: url('/assets/fonts/league-gothic/leaguegothic-regular-webfont.eot?#iefix') format('embedded-opentype'), /* IE6-IE8 */\r\n       url('/assets/fonts/league-gothic/leaguegothic-regular-webfont.woff') format('woff'), /* Pretty Modern Browsers */\r\n       url('/assets/fonts/league-gothic/leaguegothic-regular-webfont.ttf')  format('truetype'), /* Safari, Android, iOS */\r\n       url('/assets/fonts/league-gothic/leaguegothic-regular-webfont.svg#svgFontName') format('svg'); /* Legacy iOS */\r\n}","/* ==========================================================================\r\n\t\tICONS\r\n\t ========================================================================== */","/* ==========================================================================\r\n\t\tMIXINS\r\n\t ========================================================================== */\r\n\r\n// breakpoint mixins\r\n@mixin border-radius-fix($w) {\r\n\t@include border-top-left-radius($w);\r\n\t@include border-top-right-radius($w);\r\n\t@include border-bottom-left-radius($w);\r\n\t@include border-bottom-right-radius($w);\r\n}\r\n\r\n@mixin respond-to($width) {\r\n\t\t@media only screen and (max-width: $width) { @content; }\r\n}\r\n\r\n@mixin respond-from($width) {\r\n\t\t@media only screen and (min-width: $width) { @content; }\r\n}\r\n\r\n@mixin respond-to-height($height) {\r\n\t\t@media only screen and (max-height: $height) { @content; }\r\n}\r\n\r\n@mixin desktop {\r\n\t@media (min-width: $desktop) {\r\n\t\t@content\r\n\t}\r\n}\r\n\r\n@mixin desktop {\r\n\t@media (min-width: $desktop) {\r\n\t\t@content\r\n\t}\r\n}\r\n\r\n@mixin tablet-landscape {\r\n\t@media (min-width: $tablet) and (max-width: $tabletLandscape) {\r\n\t\t@content\r\n\t}\r\n}\r\n\r\n@mixin tablet-portrait {\r\n\t@media (min-width: $phone + 1) {\r\n\t\t@content\r\n\t}\r\n}\r\n\r\n@mixin tablet {\r\n\t@media (min-width: $tablet) {\r\n\t\t@content\r\n\t}\r\n}\r\n\r\n@mixin phone {\r\n\t@media (max-width: $phone) {\r\n\t\t@content\r\n\t}\r\n}\r\n\r\n// aspect ratio\r\n// rewritten, simplified\r\n@mixin aspect-ratio($w, $h) {\r\n\t$slope: $h / $w;\r\n\t$height: $h - $w * $slope;\r\n\tpadding-top: $slope * 100%;\r\n\theight: $height;\r\n}\r\n\r\n@mixin user-select($select) {\r\n\t$select: unquote($select);\r\n\t@include experimental(user-select, $select, -moz, -webkit, not -o, not -ms, -khtml, official);\r\n}\r\n\r\n// keyframes mixin\r\n@mixin keyframes($name) {\r\n\t@-webkit-keyframes #{$name} {\r\n\t\t@content;\r\n\t}\r\n\t@-moz-keyframes #{$name} {\r\n\t\t@content;\r\n\t}\r\n\t@-ms-keyframes #{$name} {\r\n\t\t@content;\r\n\t}\r\n\t@keyframes #{$name} {\r\n\t\t@content;\r\n\t}\r\n}\r\n\r\n@mixin animation($def) {\r\n\t-webkit-animation: $def; /* Safari 4+ */\r\n\t-moz-animation:    $def; /* Fx 5+ */\r\n\t-o-animation:      $def; /* Opera 12+ */\r\n\tanimation:         $def; /* IE 10+ */\r\n}\r\n\r\n// add a slash before your item\r\n@mixin slash($_height: 10px, $_margin: 5px, $_width: 4px, $_skew: -20deg, $_color: #fff) {\r\n\t\t&:before {\r\n\t\t\t\tcontent: ' ';\r\n\t\t\t\twidth: $_width;\r\n\t\t\t\theight: $_height;\r\n\t\t\t\tbackground-color: $_color;\r\n\t\t\t\tdisplay: inline-block;\r\n\t\t\t\tmargin-right: $_margin;\r\n\t\t\t\t@include transform(skewX($_skew));\r\n\t\t\t\t.rtl & {\r\n\t\t\t\t\t\tmargin-left: $_margin;\r\n\t\t\t\t\t\tmargin-right: 0px;\r\n\t\t\t\t}\r\n\t\t}\r\n}\r\n\r\n// add an arrow after your item\r\n@mixin arrow($position: 'down', $_height: 6px, $_width: 8px, $_color: black) {\r\n\t\t&:after {\r\n\t\t\t\tcontent: \" \";\r\n\t\t\t\tdisplay: inline-block;\r\n\t\t\t\twidth: 0px;\r\n\t\t\t\theight: 0px;\r\n\t\t\t\tborder-style: solid;\r\n\t\t\t\tmargin-bottom: $_height / 2;\r\n\t\t\t\t@if $position == 'down' {\r\n\t\t\t\t\tborder-width: $_height $_width / 2 0 $_width / 2;\r\n\t\t\t\t\tborder-color: $_color transparent transparent transparent;\r\n\t\t\t\t} @else if $position == 'up' {\r\n\t\t\t\t\tborder-width: 0 $_width / 2 $_height $_width / 2;\r\n\t\t\t\t\tborder-color: transparent transparent $_color transparent;\r\n\t\t\t\t} @else if $position == 'left' {\r\n\t\t\t\t\tborder-width: $_height / 2 $_width $_height / 2 0;\r\n\t\t\t\t\tborder-color: transparent $_color transparent transparent;\r\n\t\t\t\t} @else if $position == 'right' {\r\n\t\t\t\t\tborder-width: $_height / 2 0 $_height / 2 $_width;\r\n\t\t\t\t\tborder-color: transparent transparent transparent $_color;\r\n\t\t\t\t}\r\n\t\t}\r\n}\r\n\r\n// background gradients that work in IE\r\n@mixin background-image-with-ms($image) {\r\n\t\t@include background-image($image); // Compass default version, for everything but IE 10.\r\n\t\tbackground-image: -ms-#{$image}; // Vendor prefixes for IE 10.\r\n}\r\n\r\n@mixin clearfix {\r\n\t\tzoom:1;\r\n\t\t&:before, &:after {\r\n\t\t\t\tcontent: \"\\0020\";\r\n\t\t\t\tdisplay: block;\r\n\t\t\t\theight: 0;\r\n\t\t\t\toverflow: hidden;\r\n\t\t}\r\n\t\t&:after {\r\n\t\t\t\tclear: both;\r\n\t\t}\r\n}\r\n\r\n\r\n/*\r\nEfrain: I had to modify this sass mixin a little bit\r\nhttps://raw.githubusercontent.com/jorenvanhee/sass-burger/master/_burger.scss */\r\n\r\n/**\r\n * Burger parts\r\n *\r\n * (---) top    -> &:before\r\n * [---] middle -> &\r\n * (---) bottom -> &:after\r\n */\r\n\r\n/**\r\n * Burger\r\n */\r\n\r\n@mixin burger($width: 30px, $height: 5px, $gutter: 3px, $color: #000, $border-radius: 0, $transition-duration: .3s) {\r\n\r\n\t\tposition: relative;\r\n\t\tmargin-top: $height + $gutter;\r\n\t\tmargin-bottom: $height + $gutter;\r\n\r\n\t\t&, &:before, &:after {\r\n\t\t\t\tdisplay: block;\r\n\t\t\t\twidth: $width;\r\n\t\t\t\theight: $height;\r\n\t\t\t\tbackground-color: $color;\r\n\t\t\t\t@if $border-radius != 0 {\r\n\t\t\t\t\t\tborder-radius: $border-radius;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t-webkit-transition-property: background-color, -webkit-transform;\r\n\t\t\t\t-moz-transition-property: background-color, -moz-transform;\r\n\t\t\t\t-o-transition-property: background-color, -o-transform;\r\n\t\t\t\ttransition-property: background-color, transform;\r\n\r\n\t\t\t\t-webkit-transition-duration: $transition-duration;\r\n\t\t\t\t-moz-transition-duration: $transition-duration;\r\n\t\t\t\t-o-transition-duration: $transition-duration;\r\n\t\t\t\ttransition-duration: $transition-duration;\r\n\t\t}\r\n\r\n\t\t&:before, &:after {\r\n\t\t\t\tposition: absolute;\r\n\t\t\t\tcontent: \"\";\r\n\t\t}\r\n\r\n\t\t&:before {\r\n\t\t\t\ttop: -($height + $gutter);\r\n\t\t}\r\n\r\n\t\t&:after {\r\n\t\t\t\ttop: $height + $gutter;\r\n\t\t}\r\n}\r\n\r\n\r\n/**\r\n * Select parts of the burger\r\n */\r\n\r\n@mixin burger-parts {\r\n\t\t&, &:before, &:after {\r\n\t\t\t\t@content;\r\n\t\t}\r\n}\r\n\r\n@mixin burger-top {\r\n\t\t&:before {\r\n\t\t\t\t@content;\r\n\t\t}\r\n}\r\n\r\n@mixin burger-middle {\r\n\t\t& {\r\n\t\t\t\t@content;\r\n\t\t}\r\n}\r\n\r\n@mixin burger-bottom {\r\n\t\t&:after {\r\n\t\t\t\t@content;\r\n\t\t}\r\n}\r\n\r\n/**\r\n * Burger animations\r\n */\r\n\r\n@mixin burger-to-cross($burger-height: 5px, $burger-gutter: 30px) {\r\n\r\n\t\t& {\r\n\t\t\t\tbackground-color: transparent;\r\n\t\t}\r\n\t\t&:before {\r\n\t\t\t\t-webkit-transform: translateY($burger-gutter + $burger-height) rotate(45deg);\r\n\t\t\t\t-moz-transform: translateY($burger-gutter + $burger-height) rotate(45deg);\r\n\t\t\t\t-ms-transform: translateY($burger-gutter + $burger-height) rotate(45deg);\r\n\t\t\t\t-o-transform: translateY($burger-gutter + $burger-height) rotate(45deg);\r\n\t\t\t\ttransform: translateY($burger-gutter + $burger-height) rotate(45deg);\r\n\t\t}\r\n\t\t&:after {\r\n\t\t\t\t-webkit-transform: translateY(-($burger-gutter + $burger-height)) rotate(-45deg);\r\n\t\t\t\t-moz-transform: translateY(-($burger-gutter + $burger-height)) rotate(-45deg);\r\n\t\t\t\t-ms-transform: translateY(-($burger-gutter + $burger-height)) rotate(-45deg);\r\n\t\t\t\t-o-transform: translateY(-($burger-gutter + $burger-height)) rotate(-45deg);\r\n\t\t\t\ttransform: translateY(-($burger-gutter + $burger-height)) rotate(-45deg);\r\n\t\t}\r\n}\r\n\r\n// placeholder classes\r\n\r\n%button-arrow {\r\n\t&:after {\r\n\t\tbackground-color: #fff;\r\n\t\tcontent: '';\r\n\t\tdisplay: block;\r\n\t\theight: 2px;\r\n\t\tposition: absolute;\r\n\t\tright: 28px;\r\n\t\ttop: 50%;\r\n\t\twidth: 0px;\r\n\t\t@include transform(translateY(-50%));\r\n\t\t@include transition(width $transitionSpeed);\r\n\t}\r\n\t&:hover {\r\n\t\t&:after {\r\n\t\t\twidth: 20px;\r\n\t\t}\r\n\t}\r\n\ta:hover & {\r\n\t\t&:after {\r\n\t\t\twidth: 20px;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// extendable classes (not placeholder)\r\n\r\n.clearfix {\r\n\t&:after {\r\n\t\tcontent: \"\";\r\n\t\tdisplay: table;\r\n\t\tclear: both;\r\n\t}\r\n}\r\n\r\n.container {\r\n\t@extend .clearfix;\r\n\tmax-width: 1170px;\r\n\tposition: relative;\r\n\tmargin: 0 auto;\r\n\tpadding: 0 15px;\r\n}\r\n\r\n%wysiwyg {\r\n\th1, h2, h3, h4, h5, h6 {\r\n\t\tfont-weight: normal;\r\n\t\tline-height: 1;\r\n\t\tmargin-top: 0px;\r\n\t}\r\n\ta {\r\n\t\t@extend .standard-link;\r\n\t}\r\n\tblockquote {\r\n\t\t@extend .content-column__blockquote;\r\n\t}\r\n}\r\n","/* ==========================================================================\r\n\t\tBROWSER TWEAKS\r\n\t ========================================================================== */\r\nhtml {\r\n\t-webkit-font-smoothing: antialiased;\r\n}\r\n\r\n// fixes input elements to have border-box great for percentages\r\n* , *:before , *:after {\r\n\t-webkit-tap-highlight-color: rgba(0,0,0,0);\r\n\tbox-sizing: border-box;\r\n}\r\n\r\n// remove annoying dotted outline on links and form elements\r\n* {\r\n\t\toutline: 0;\r\n}\r\n\r\n/* IE 10 Overrides */\r\n\r\n// removes annoying x on inputs\r\n*::-ms-clear {\r\n\t\tdisplay: none;\r\n}\r\n\r\n// fix scrollbar overlap\r\nbody {\r\n\t\t-ms-overflow-style: scrollbar !important;\r\n}\r\n\r\n// Browser Form overwrites\r\ninput, textarea {\r\n\t\t@include appearance(none);\r\n}\r\nselect {\r\n\t\tborder-radius: 0;\r\n}\r\ntextarea {\r\n\t\tresize: none;\r\n}\r\ninput[type=submit] {\r\n\t\tcursor: pointer;\r\n}\r\n\r\n/* Mobile Overrides */\r\n// remove ugly highlight color\r\n* {\r\n\t\t-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\r\n}\r\n","/* ==========================================================================\r\n\t\tGLOBAL\r\n\t ========================================================================== */\r\n@import url(https://fonts.googleapis.com/css?family=Open+Sans);\r\n\r\nhtml, body {\r\n  height: 100%;\r\n  font-family: 'Open Sans', sans-serif;\r\n  color: #000;\r\n}\r\n\r\n.wrapper {\r\n\r\n}\r\n\r\n.container {\r\n  max-width: 1250px;\r\n  padding: 15px;\r\n  margin-bottom: 60px;\r\n  margin: auto auto;\r\n  margin: 40px auto auto;\r\n  padding: 40px;\r\n  @include desktop {\r\n    width: 100%;\r\n  }\r\n}\r\n","/*! Avalanche | MIT License | @colourgarden */\r\n\r\n/*------------------------------------*\\\r\n    SETTINGS\r\n\\*------------------------------------*/\r\n\r\n$av-namespace:  'grid' !default;  // Prefix namespace for grid layout and cells\r\n$av-gutter:     20px !default;    // Gutter between grid cells\r\n\r\n$av-width-class-namespace:  '' !default;          // Prefix namepspace for width classes\r\n$av-width-class-style:      'fraction' !default;  // Width class naming style. Can be 'fraction', 'percentage' or 'fragment'\r\n$av-widths: (\r\n  2,\r\n  3,\r\n  4\r\n) !default; // Width denominator values. 2 = 1/2, 3 = 1/3 etc. Add/remove as appropriate\r\n\r\n$av-enable-responsive:  true !default;\r\n$av-breakpoints:  (\r\n  \"thumb\":            \"screen and (max-width: 499px)\",\r\n  \"handheld\":         \"screen and (min-width: 500px) and (max-width: 800px)\",\r\n  \"handheld-and-up\":  \"screen and (min-width: 500px)\",\r\n  \"pocket\":           \"screen and (max-width: 800px)\",\r\n  \"lap\":              \"screen and (min-width: 801px) and (max-width: 1024px)\",\r\n  \"lap-and-up\":       \"screen and (min-width: 801px)\",\r\n  \"portable\":         \"screen and (max-width: 1024px)\",\r\n  \"desk\":             \"screen and (min-width: 1025px)\",\r\n  \"widescreen\":       \"screen and (min-width: 1160px)\",\r\n  \"retina\":           \"screen and (-webkit-min-device-pixel-ratio: 2), screen and (min-resolution: 192dpi), screen and (min-resolution: 2dppx)\"\r\n) !default; // Responsive breakpoints. Add/remove as appropriate\r\n\r\n// Enable/disable grid layouts\r\n$av-enable-grid-center:       false !default;\r\n$av-enable-grid-cell-center:  false !default;\r\n$av-enable-grid-right:        false !default;\r\n$av-enable-grid-middle:       false !default;\r\n$av-enable-grid-bottom:       false !default;\r\n$av-enable-grid-flush:        false !default;\r\n$av-enable-grid-tiny:         false !default;\r\n$av-enable-grid-small:        false !default;\r\n$av-enable-grid-large:        false !default;\r\n$av-enable-grid-huge:         false !default;\r\n$av-enable-grid-auto:         false !default;\r\n$av-enable-grid-rev:          false !default;\r\n\r\n\r\n\r\n\r\n\r\n/*------------------------------------*\\\r\n    LOGIC aka THE MAGIC\r\n\\*------------------------------------*/\r\n\r\n@function avCreateClassName($style, $numerator, $denominator, $breakpoint-alias){\r\n\r\n  $class-name: null;\r\n\r\n  @if $style == 'fraction' or $style == 'fragment'{\r\n    // Set delimiter as slash or text\r\n    $delimiter: if($style == 'fraction', \\/, -of-);\r\n    $class-name: #{$av-width-class-namespace}\\3#{$numerator}#{$delimiter}#{$denominator}#{$breakpoint-alias};\r\n  } @else{\r\n    @if $av-width-class-namespace == ''{\r\n      @error \"Percentage value class names require a namespace to be set (see $av-width-class-namespace). Selective escaping (e.g. the 5 of 50) cannot be done.\";\r\n    }\r\n    $class-width: floor(($numerator / $denominator) * 100);\r\n    $class-name: #{$av-width-class-namespace}#{$class-width}#{$breakpoint-alias};\r\n  }\r\n\r\n  @return $class-name;\r\n}\r\n\r\n@mixin av-create-widths($widths, $breakpoint-alias: null){\r\n\r\n  // Initialise an empty utility map that will eventually contain all our classes\r\n  $pseudo-class-map: ();\r\n\r\n  // Loop widths\r\n  @each $denominator in $widths{\r\n\r\n    // If 1=1, 2=2, 3=3; @for will skip over so create 1/1 class manually\r\n    @if ($denominator == 1) {\r\n\r\n      // Create 1/1 class\r\n      $class-name: avCreateClassName($av-width-class-style, 1, 1, $breakpoint-alias);\r\n      .#{$class-name}{\r\n        width: 100%;\r\n      }\r\n\r\n    } @else {\r\n\r\n      // Loop widths as fractions\r\n      @for $numerator from 1 to $denominator{\r\n\r\n        // Create class name and set width value\r\n        $class-name: avCreateClassName($av-width-class-style, $numerator,$denominator, $breakpoint-alias);\r\n        $width-value: percentage($numerator / $denominator);\r\n\r\n        // Is this width already in our utility map?\r\n        $duplicate: map-get($pseudo-class-map, $width-value);\r\n\r\n        // Create width class\r\n        .#{$class-name}{\r\n\r\n          // If this width is in utility map, @extend the duplicate, else create a new one\r\n          @if $duplicate{\r\n            @extend .#{$duplicate};\r\n          } @else{\r\n            width: $width-value;\r\n          }\r\n        }\r\n\r\n        // Add this class to utility map\r\n        $add-class: ($width-value: $class-name);\r\n        $pseudo-class-map: map-merge($pseudo-class-map, $add-class);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n@mixin av-mq($alias){\r\n\r\n  // Search breakpoint map for alias\r\n  $query: map-get($av-breakpoints, $alias);\r\n\r\n  // If alias exists, print out media query\r\n  @if $query{\r\n    @media #{$query}{\r\n      @content;\r\n    }\r\n  } @else{\r\n    @error \"No breakpoint found for #{$alias}\";\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n/*------------------------------------*\\\r\n    GRID LAYOUT\r\n\\*------------------------------------*/\r\n\r\n.#{$av-namespace}{\r\n  display: block;\r\n  list-style: none;\r\n  padding: 0;\r\n  margin: 0;\r\n  margin-left: -($av-gutter);\r\n  font-size: 0;\r\n}\r\n\r\n  .#{$av-namespace}__cell{\r\n    box-sizing: border-box;\r\n    display: inline-block;\r\n    width: 100%;\r\n    padding: 0;\r\n    padding-left: $av-gutter;\r\n    margin: 0;\r\n    vertical-align: top;\r\n    font-size: 1rem;\r\n  }\r\n\r\n@if $av-enable-grid-center{\r\n\r\n  .#{$av-namespace}--center{\r\n    text-align: center;\r\n\r\n    > .#{$av-namespace}__cell{\r\n      text-align: left;\r\n    }\r\n  }\r\n}\r\n\r\n@if $av-enable-grid-cell-center{\r\n\r\n  .#{$av-namespace}__cell--center{\r\n    display: block;\r\n    margin: 0 auto;\r\n  }\r\n}\r\n\r\n@if $av-enable-grid-right{\r\n\r\n  .#{$av-namespace}--right{\r\n    text-align: right;\r\n\r\n    > .#{$av-namespace}__cell{\r\n      text-align: left;\r\n    }\r\n  }\r\n}\r\n\r\n@if $av-enable-grid-middle{\r\n\r\n  .#{$av-namespace}--middle{\r\n\r\n    > .#{$av-namespace}__cell{\r\n      vertical-align: middle;\r\n    }\r\n  }\r\n}\r\n\r\n@if $av-enable-grid-bottom{\r\n\r\n  .#{$av-namespace}--bottom{\r\n\r\n    > .#{$av-namespace}__cell{\r\n      vertical-align: bottom;\r\n    }\r\n  }\r\n}\r\n\r\n@if $av-enable-grid-flush{\r\n\r\n  .#{$av-namespace}--flush{\r\n    margin-left: 0;\r\n\r\n    > .#{$av-namespace}__cell{\r\n      padding-left: 0;\r\n    }\r\n  }\r\n}\r\n\r\n@if $av-enable-grid-tiny{\r\n\r\n  .#{$av-namespace}--tiny{\r\n    margin-left: -($av-gutter / 4);\r\n\r\n    > .#{$av-namespace}__cell{\r\n      padding-left: ($av-gutter / 4);\r\n    }\r\n  }\r\n}\r\n\r\n@if $av-enable-grid-small{\r\n\r\n  .#{$av-namespace}--small{\r\n    margin-left: -($av-gutter / 2);\r\n\r\n    > .#{$av-namespace}__cell{\r\n      padding-left: ($av-gutter / 2);\r\n    }\r\n  }\r\n}\r\n\r\n@if $av-enable-grid-large{\r\n\r\n  .#{$av-namespace}--large{\r\n    margin-left: -($av-gutter * 2);\r\n\r\n    > .#{$av-namespace}__cell{\r\n      padding-left: ($av-gutter * 2);\r\n    }\r\n  }\r\n}\r\n\r\n@if $av-enable-grid-huge{\r\n\r\n  .#{$av-namespace}--huge{\r\n    margin-left: -($av-gutter * 4);\r\n\r\n    > .#{$av-namespace}__cell{\r\n      padding-left: ($av-gutter * 4);\r\n    }\r\n  }\r\n}\r\n\r\n@if $av-enable-grid-auto{\r\n\r\n  .#{$av-namespace}--auto{\r\n\r\n    > .#{$av-namespace}__cell{\r\n      width: auto;\r\n    }\r\n  }\r\n}\r\n\r\n@if $av-enable-grid-rev{\r\n\r\n  .#{$av-namespace}--rev{\r\n    direction: rtl;\r\n\r\n    > .#{$av-namespace}__cell{\r\n      direction: ltr;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n/*------------------------------------*\\\r\n    GRID WIDTHS\r\n\\*------------------------------------*/\r\n\r\n// Loop default widths\r\n@include av-create-widths($av-widths);\r\n\r\n// If responsive flag enabled, loop breakpoint widths\r\n@if $av-enable-responsive{\r\n\r\n  @each $alias, $query in $av-breakpoints{\r\n\r\n    // Create each media query\r\n    @media #{$query}{\r\n      @include av-create-widths($av-widths, --#{$alias});\r\n    }\r\n  }\r\n}\r\n","/* ==========================================================================\r\n\t\tANIMATION\r\n\t ========================================================================== */\r\n\r\n// All Keyframes essentially live in this partial","/* ==========================================================================\r\n\tHEADER\r\n\t========================================================================== */\r\n\r\n.header {\r\n  background-color: #2B2D42;\r\n  padding-bottom: 1.5em;\r\n  padding-top: 1.5em;\r\n\r\n  @include phone {\r\n    background: #D90429;\r\n    font-size: 2em;\r\n    height: 0%;\r\n    left: 0;\r\n    opacity: 0;\r\n    overflow: hidden;\r\n    position: fixed;\r\n    top: -80px;\r\n    top: 0;\r\n    transition: opacity .35s, visibility .35s, height .35s;\r\n    visibility: hidden;\r\n    width: 100%;\r\n    z-index: 1;\r\n\r\n    &.open {\r\n      height: 100%;\r\n      opacity: .9;\r\n      visibility: visible;\r\n\r\n      li {\r\n        animation: fadeInRight .5s ease forwards;\r\n        animation-delay: .35s;\r\n\r\n        &:nth-of-type(2) {\r\n          animation-delay: .4s;\r\n        }\r\n        &:nth-of-type(3) {\r\n          animation-delay: .45s;\r\n        }\r\n        &:nth-of-type(4) {\r\n          animation-delay: .50s;\r\n        }\r\n      }\r\n    }\r\n\r\n    ul {\r\n      display: inline-block;\r\n      height: 100%;\r\n      list-style: none;\r\n      margin: 40px auto;\r\n      padding: 0;\r\n      position: relative;\r\n\r\n      li {\r\n        display: block;\r\n        height: 25%;\r\n        height: calc(100% / 4);\r\n        min-height: 50px;\r\n        opacity: 0;\r\n        position: relative;\r\n\r\n        a {\r\n          color: #FFF;\r\n          display: block;\r\n          overflow: hidden;\r\n          position: relative;\r\n          text-decoration: none;\r\n          text-align: center;\r\n\r\n          &:hover:after,\r\n           &:focus:after,\r\n           &:active:after {\r\n             width: 100%;\r\n           }\r\n\r\n          &:after {\r\n            background: #FFF;\r\n            bottom: 0;\r\n            content: '';\r\n            height: 3px;\r\n            left: 50%;\r\n            position: absolute;\r\n            transform: translateX(-50%);\r\n            transition: .35s;\r\n            width: 0%;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n@keyframes fadeInRight {\r\n  0% {\r\n    left: 20%;\r\n    opacity: 0;\r\n  }\r\n  100% {\r\n    left: 0;\r\n    opacity: 1;\r\n  }\r\n}\r\n\r\n.header-logo, .header-menu {\r\n  display: inline-block;\r\n}\r\n\r\n.header-logo {\r\n  @include phone {\r\n    display: none;\r\n  }\r\n}\r\n\r\n.header-menu {\r\n  margin-bottom: 6px;\r\n  margin-top: 6px;\r\n  vertical-align: top;\r\n\r\n  @include phone {\r\n    height: 100%;\r\n    left: 0;\r\n    position: fixed;\r\n    top: 0;\r\n    transform: translateY(0);\r\n    transition-duration: 0.4s;\r\n    transition-property: transform;\r\n    width: 100%;\r\n  }\r\n}\r\n\r\n.header-menu__item {\r\n  display: inline-block;\r\n  a {\r\n    color: #EDF2F4;\r\n    display: block;\r\n    font-size: .95em;\r\n    padding: 10px 15px;\r\n    text-decoration:none;\r\n    text-transform: uppercase;\r\n  }\r\n\r\n  a:hover {\r\n    color: #e62739;\r\n  }\r\n}\r\n\r\n.header-burger {\r\n  display: none;\r\n  @include phone {\r\n    cursor: pointer;\r\n    display: initial;\r\n    height: 27px;\r\n    position: fixed;\r\n    right: 2%;\r\n    top: 5%;\r\n    transition: opacity .25s ease;\r\n    width: 35px;\r\n    z-index: 100;\r\n\r\n    &:hover {\r\n      opacity: .7;\r\n    }\r\n\r\n    &.active {\r\n      .top {\r\n        background: #FFF;\r\n        transform: translateY(11px) translateX(0) rotate(45deg);\r\n      }\r\n      .middle {\r\n        background: #FFF;\r\n        opacity: 0;\r\n      }\r\n\r\n      .bottom {\r\n        background: #FFF;\r\n        transform: translateY(-11px) translateX(0) rotate(-45deg);\r\n      }\r\n    }\r\n\r\n    span {\r\n    background: #D90429;\r\n    border: none;\r\n    cursor: pointer;\r\n    height: 5px;\r\n    left: 0;\r\n    position: absolute;\r\n    top: 0;\r\n    transition:  all .35s ease;\r\n    width: 100%;\r\n\r\n      &:nth-of-type(2) {\r\n        top: 11px;\r\n      }\r\n\r\n      &:nth-of-type(3) {\r\n        top: 22px;\r\n      }\r\n    }\r\n  }\r\n}\r\n","/* ==========================================================================\r\n\tFOOTER\r\n\t========================================================================== */\r\n\r\n.footer {\r\n\ttext-align: center;\r\n  padding: 2em 0;\r\n  background: #1D3461;\r\n  color: #EDF2F4;\r\n}\r\n","/* ==========================================================================\r\nEXAMPLE\r\n========================================================================== */\r\n"],"mappings":"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","names":[],"sourceRoot":"/source/"}